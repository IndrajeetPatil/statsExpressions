[{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to statsExpressions","title":"Contributing to statsExpressions","text":"outlines propose change statsExpressions. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to statsExpressions","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. YES: edit roxygen comment .R file R/. : edit .Rd file man/.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Contributing to statsExpressions","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reprex.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"Contributing to statsExpressions","text":"recommend create Git branch pull request (PR). Look Travis AppVeyor build status making changes. README contain badges continuous integration services used package. New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to statsExpressions","text":"Please note statsExpressions project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/CONTRIBUTING.html","id":"see-tidyverse-development-contributing-guide","dir":"","previous_headings":"","what":"See tidyverse development contributing guide","title":"Contributing to statsExpressions","text":"details.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 statsExpressions authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with statsExpressions","title":"Getting help with statsExpressions","text":"Thanks using statsExpressions. filing issue, places explore pieces put together make process smooth possible. Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. right place, need file issue, please review “File issues” paragraph tidyverse contributing guidelines. Thanks help!","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"statsExpressions package two key aims: provide consistent syntax statistical analysis tidy data, provide statistical expressions (.e., pre-formatted -text statistical results) plotting functions. Currently, supports common types statistical approaches tests: parametric, nonparametric, robust, Bayesian t-test, one-way ANOVA, correlation analyses, contingency table analyses, meta-analyses. functions pipe-friendly compatible tidy data.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"statement-of-need","dir":"Articles","previous_headings":"","what":"Statement of Need","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"Statistical packages exhibit substantial diversity terms syntax expected input output data type. example, functions expect vectors inputs, others expect data frames. Depending whether repeated measures design , functions package might expect data wide tidy format. functions can internally omit missing values, others . Furthermore, statistical test objects returned test functions might required information (e.g., degrees freedom, significance, Bayes factor, etc.) accessible consistent data type. Depending specific test object statistic question, details may returned list, matrix, array, data frame. diversity can make difficult easily access needed information hypothesis testing estimation, switch one statistical approach another. statsExpressions comes : can thought unified portal functionality underlying packages can accessed, simpler interface tidy data format.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"comparison-to-other-packages","dir":"Articles","previous_headings":"","what":"Comparison to Other Packages","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"Unlike broom (Robinson, Hayes, & Couch, 2021) parameters (Lüdecke, Ben-Shachar, Patil, & Makowski, 2020), goal statsExpressions convert model objects tidy data frames, provide consistent easy syntax carry statistical tests. Additionally, none packages return statistical expressions.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"consistent-syntax-for-statistical-analysis","dir":"Articles","previous_headings":"","what":"Consistent Syntax for Statistical Analysis","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"package offers functions allow users choose statistical approach without changing syntax (.e., specifying single argument). functions always require data frame tidy format (Wickham et al., 2019), work missing data. Moreover, always return data frame can utilized downstream workflow (visualization). summary table listing primary functions package statistical approaches support. detailed description tests outputs functions can found package website: https://indrajeetpatil.github.io/statsExpressions/articles/. statsExpressions internally relies {stats} package parametric non-parametric (R Core Team, 2021), WRS2 package robust (Mair & Wilcox, 2020), BayesFactor package Bayesian statistics (Morey & Rouder, 2020). random-effects meta-analysis carried using metafor (parametric) (Viechtbauer, 2010), {metaplus} (robust) (Beath, 2016), metaBMA (Bayesian) (Heck et al., 2019) packages. Additionally, relies easystats packages (Ben-Shachar, Lüdecke, & Makowski, 2020; Lüdecke et al., 2020; Lüdecke, Ben-Shachar, Patil, Waggoner, & Makowski, 2021; Lüdecke, Waggoner, & Makowski, 2019; Makowski, Ben-Shachar, & Lüdecke, 2019; Makowski, Ben-Shachar, Patil, & Lüdecke, 2020) compute appropriate effect size/posterior estimates confidence/credible intervals.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"tidy-dataframes-from-statistical-analysis","dir":"Articles","previous_headings":"","what":"Tidy Dataframes from Statistical Analysis","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"illustrate simplicity syntax, let’s say want run one-way ANOVA. first run non-parametric ANOVA decide run robust ANOVA instead, syntax remains statistical approach can modified changing single argument: functions also compatible popular data manipulation packages. example, can use combination dplyr statsExpressions repeat statistical analysis across grouping variables.","code":"oneway_anova(mtcars, cyl, wt, type = \"nonparametric\") #> # A tibble: 1 × 15 #>   parameter1 parameter2 statistic df.error   p.value #>   <chr>      <chr>          <dbl>    <int>     <dbl> #> 1 wt         cyl             22.8        2 0.0000112 #>   method                       effectsize      estimate conf.level conf.low #>   <chr>                        <chr>              <dbl>      <dbl>    <dbl> #> 1 Kruskal-Wallis rank sum test Epsilon2 (rank)    0.736       0.95    0.624 #>   conf.high conf.method          conf.iterations n.obs expression #>       <dbl> <chr>                          <int> <int> <list>     #> 1         1 percentile bootstrap             100    32 <language>  oneway_anova(mtcars, cyl, wt, type = \"robust\") #> # A tibble: 1 × 12 #>   statistic    df df.error p.value #>       <dbl> <dbl>    <dbl>   <dbl> #> 1      12.7     2     12.2 0.00102 #>   method                                            #>   <chr>                                             #> 1 A heteroscedastic one-way ANOVA for trimmed means #>   effectsize                         estimate conf.level conf.low conf.high #>   <chr>                                 <dbl>      <dbl>    <dbl>     <dbl> #> 1 Explanatory measure of effect size     1.05       0.95    0.843      1.50 #>   n.obs expression #>   <int> <list>     #> 1    32 <language> # running one-sample proportion test for `vs` at all levels of `am` mtcars %>%   group_by(am) %>%   group_modify(~ contingency_table(.x, vs), .keep = TRUE) %>%   ungroup() #> # A tibble: 2 × 14 #>      am statistic    df p.value method   effectsize estimate conf.level conf.low #>   <dbl>     <dbl> <dbl>   <dbl> <chr>    <chr>         <dbl>      <dbl>    <dbl> #> 1     0    1.32       1   0.251 Chi-squ… Pearson's…   0.254        0.95        0 #> 2     1    0.0769     1   0.782 Chi-squ… Pearson's…   0.0767       0.95        0 #> # ℹ 5 more variables: conf.high <dbl>, conf.method <chr>, #> #   conf.distribution <chr>, n.obs <int>, expression <list>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"expressions-for-plots","dir":"Articles","previous_headings":"","what":"Expressions for Plots","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"addition details contained data frame, also column titled expression, contains pre-formatted text statistical details. expressions (Figure 1) attempt follow gold standard statistical reporting Bayesian (Doorn et al., 2020) Frequentist (American Psychological Association others, 2019) frameworks. templates used statsExpressions display statistical details plot. expression easily displayed plot (Figure 2). Displaying statistical results context visualization indeed philosophy adopted ggstatsplot package (Patil, 2021), statsExpressions functions statistical processing backend. Example illustrating statsExpressions functions can used display results statistical test plot.","code":"# needed libraries library(ggplot2)  # creating a data frame res <- oneway_anova(iris, Species, Sepal.Length, type = \"nonparametric\")  ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_boxplot() + # use 'expression' column to display results in the subtitle   labs(     x = \"Penguin Species\",     y = \"Body mass (in grams)\",     title = \"Kruskal-Wallis Rank Sum Test\",     subtitle = res$expression[[1]]   )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"licensing-and-availability","dir":"Articles","previous_headings":"","what":"Licensing and Availability","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"statsExpressions licensed GNU General Public License (v3.0), source code stored GitHub. spirit honest open science, requests suggestions fixes, feature updates, well general questions concerns encouraged via direct interaction contributors developers filing issue respecting Contribution Guidelines.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/statsExpressions.html","id":"acknowledgements","dir":"Articles","previous_headings":"","what":"Acknowledgements","title":"statsExpressions: R Package for Tidy Dataframes and Expressions with Statistical Details","text":"like acknowledge support Mina Cikara, Fiery Cushman, Iyad Rahwan development project. statsExpressions relies heavily easystats ecosystem, collaborative project created facilitate usage R statistical analyses. Thus, like thank members easystats well users.","code":""},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Test and effect size details","text":"go-summary statistical test carried returned effect size function provided. useful one needs find information argument resolved underlying package one wishes browse source code. , example, want know one-way (-subjects) ANOVA, can run ?stats::oneway.test R console. Abbreviations used: CI = Confidence Interval","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"summary-of-functionality","dir":"Articles","previous_headings":"","what":"Summary of functionality","title":"Test and effect size details","text":"Summary available analyses Summary details available analyses Summary supported statistical approaches","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"summary-of-tests-and-effect-sizes","dir":"Articles","previous_headings":"","what":"Summary of tests and effect sizes","title":"Test and effect size details","text":"go-summary statistical test carried returned effect size function provided. useful one needs find information argument resolved underlying package one wishes browse source code. , example, want know one-way (-subjects) ANOVA, can run ?stats::oneway.test R console.","code":""},{"path":[]},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"between-subjects","dir":"Articles","previous_headings":"Summary of tests and effect sizes > oneway_anova()","what":"between-subjects","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"within-subjects","dir":"Articles","previous_headings":"Summary of tests and effect sizes > oneway_anova()","what":"within-subjects","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"between-subjects-1","dir":"Articles","previous_headings":"Summary of tests and effect sizes > two_sample_test()","what":"between-subjects","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"within-subjects-1","dir":"Articles","previous_headings":"Summary of tests and effect sizes > two_sample_test()","what":"within-subjects","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"one_sample_test","dir":"Articles","previous_headings":"Summary of tests and effect sizes","what":"one_sample_test()","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"corr_test","dir":"Articles","previous_headings":"Summary of tests and effect sizes","what":"corr_test()","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"two-way-table","dir":"Articles","previous_headings":"Summary of tests and effect sizes > contingency_table()","what":"two-way table","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"one-way-table","dir":"Articles","previous_headings":"Summary of tests and effect sizes > contingency_table()","what":"one-way table","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"meta_analysis","dir":"Articles","previous_headings":"Summary of tests and effect sizes","what":"meta_analysis()","title":"Test and effect size details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"effect-size-interpretation","dir":"Articles","previous_headings":"","what":"Effect size interpretation","title":"Test and effect size details","text":"See effectsize’s interpretation functions check different rules/conventions interpret effect sizes: https://easystats.github.io/effectsize/reference/index.html#section-interpretation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Test and effect size details","text":"parametric non-parametric effect sizes: https://easystats.github.io/effectsize/articles/ robust effect sizes: https://CRAN.R-project.org/package=WRS2/vignettes/WRS2.pdf Bayesian posterior estimates: https://easystats.github.io/bayestestR/articles/bayes_factors.html","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html","id":"suggestions","dir":"Articles","previous_headings":"","what":"Suggestions","title":"Test and effect size details","text":"find bugs suggestions/remarks, please file issue GitHub: https://github.com/IndrajeetPatil/statsExpressions/issues","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"one-sample-tests","dir":"Articles > Web_only","previous_headings":"","what":"One-sample tests","title":"Data frame outputs","text":"","code":"# for reproducibility set.seed(123)  # ----------------------- parametric -----------------------  one_sample_test(mtcars, wt, test.value = 3) #> # A tibble: 1 × 15 #>      mu statistic df.error p.value method            alternative effectsize #>   <dbl>     <dbl>    <dbl>   <dbl> <chr>             <chr>       <chr>      #> 1     3      1.26       31   0.218 One Sample t-test two.sided   Hedges' g  #>   estimate conf.level conf.low conf.high conf.method conf.distribution n.obs #>      <dbl>      <dbl>    <dbl>     <dbl> <chr>       <chr>             <int> #> 1    0.217       0.95   -0.127     0.557 ncp         t                    32 #>   expression #>   <list>     #> 1 <language>  # ----------------------- non-parametric -------------------  one_sample_test(mtcars, wt, test.value = 3, type = \"nonparametric\") #> # A tibble: 1 × 12 #>   statistic p.value method                    alternative effectsize        #>       <dbl>   <dbl> <chr>                     <chr>       <chr>             #> 1       319   0.308 Wilcoxon signed rank test two.sided   r (rank biserial) #>   estimate conf.level conf.low conf.high conf.method n.obs expression #>      <dbl>      <dbl>    <dbl>     <dbl> <chr>       <int> <list>     #> 1    0.208       0.95   -0.184     0.543 normal         32 <language>  # ----------------------- robust ---------------------------  one_sample_test(mtcars, wt, test.value = 3, type = \"robust\") #> # A tibble: 1 × 10 #>   statistic p.value n.obs method                                 effectsize   #>       <dbl>   <dbl> <int> <chr>                                  <chr>        #> 1      1.18   0.275    32 Bootstrap-t method for one-sample test Trimmed mean #>   estimate conf.level conf.low conf.high expression #>      <dbl>      <dbl>    <dbl>     <dbl> <list>     #> 1     3.20       0.95     2.85      3.54 <language>  # ----------------------- Bayesian -------------------------  one_sample_test(mtcars, wt, test.value = 3, type = \"bayes\") #> # A tibble: 1 × 16 #>   term       effectsize      estimate conf.level conf.low conf.high    pd #>   <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl> #> 1 Difference Bayesian t-test    0.195       0.95   -0.165     0.555  0.86 #>   prior.distribution prior.location prior.scale  bf10 method          #>   <chr>                       <dbl>       <dbl> <dbl> <chr>           #> 1 cauchy                          0       0.707 0.387 Bayesian t-test #>   conf.method log_e_bf10 n.obs expression #>   <chr>            <dbl> <int> <list>     #> 1 ETI             -0.950    32 <language>"},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"within-subjects-design","dir":"Articles > Web_only","previous_headings":"Two-sample tests","what":"within-subjects design","title":"Data frame outputs","text":"","code":"# ----------------------- within-subjects -------------------------------------  # data df <- dplyr::filter(bugs_long, condition %in% c(\"LDLF\", \"LDHF\"))  # for reproducibility set.seed(123)  # ----------------------- parametric ---------------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"parametric\") #> # A tibble: 1 × 16 #>   term   group     statistic df.error       p.value method        alternative #>   <chr>  <chr>         <dbl>    <dbl>         <dbl> <chr>         <chr>       #> 1 desire condition      6.65       90 0.00000000222 Paired t-test two.sided   #>   effectsize estimate conf.level conf.low conf.high conf.method #>   <chr>         <dbl>      <dbl>    <dbl>     <dbl> <chr>       #> 1 Hedges' g     0.691       0.95    0.462     0.917 ncp         #>   conf.distribution n.obs expression #>   <chr>             <int> <list>     #> 1 t                    91 <language>  # ----------------------- non-parametric -----------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"nonparametric\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 statistic      p.value method                    #>   <chr>      <chr>          <dbl>        <dbl> <chr>                     #> 1 desire     condition      2250. 0.0000000241 Wilcoxon signed rank test #>   alternative effectsize        estimate conf.level conf.low conf.high #>   <chr>       <chr>                <dbl>      <dbl>    <dbl>     <dbl> #> 1 two.sided   r (rank biserial)    0.761       0.95    0.642     0.844 #>   conf.method n.obs expression #>   <chr>       <int> <list>     #> 1 normal         91 <language>  # ----------------------- robust --------------------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"robust\") #> # A tibble: 1 × 15 #>   statistic df.error      p.value #>       <dbl>    <dbl>        <dbl> #> 1      6.46       54 0.0000000313 #>   method                                             #>   <chr>                                              #> 1 Yuen's test on trimmed means for dependent samples #>   effectsize                                              estimate conf.level #>   <chr>                                                      <dbl>      <dbl> #> 1 Algina-Keselman-Penfield robust standardized difference    0.533       0.95 #>   conf.low conf.high    mu small medium large n.obs expression #>      <dbl>     <dbl> <dbl> <dbl>  <dbl> <dbl> <int> <list>     #> 1    0.369     0.707     0   0.1    0.3   0.5    91 <language>  # ----------------------- Bayesian ---------------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"bayes\") #> # A tibble: 1 × 16 #>   term       effectsize      estimate conf.level conf.low conf.high    pd #>   <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl> #> 1 Difference Bayesian t-test     1.63       0.95     1.13      2.11     1 #>   prior.distribution prior.location prior.scale     bf10 method          #>   <chr>                       <dbl>       <dbl>    <dbl> <chr>           #> 1 cauchy                          0       0.707 4762370. Bayesian t-test #>   conf.method log_e_bf10 n.obs expression #>   <chr>            <dbl> <int> <list>     #> 1 ETI               15.4    91 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"between-subjects-design","dir":"Articles > Web_only","previous_headings":"Two-sample tests","what":"between-subjects design","title":"Data frame outputs","text":"","code":"# ----------------------- between-subjects -------------------------------------  # for reproducibility set.seed(123)  # ----------------------- parametric ---------------------------------------  # unequal variance two_sample_test(ToothGrowth, supp, len, type = \"parametric\") #> # A tibble: 1 × 18 #>   parameter1 parameter2 mean.parameter1 mean.parameter2 statistic df.error #>   <chr>      <chr>                <dbl>           <dbl>     <dbl>    <dbl> #> 1 len        supp                  20.7            17.0      1.92     55.3 #>   p.value method                  alternative effectsize estimate conf.level #>     <dbl> <chr>                   <chr>       <chr>         <dbl>      <dbl> #> 1  0.0606 Welch Two Sample t-test two.sided   Hedges' g     0.488       0.95 #>   conf.low conf.high conf.method conf.distribution n.obs expression #>      <dbl>     <dbl> <chr>       <chr>             <int> <list>     #> 1  -0.0217     0.993 ncp         t                    60 <language>  # equal variance two_sample_test(ToothGrowth, supp, len, type = \"parametric\", var.equal = TRUE) #> # A tibble: 1 × 18 #>   parameter1 parameter2 mean.parameter1 mean.parameter2 statistic df.error #>   <chr>      <chr>                <dbl>           <dbl>     <dbl>    <dbl> #> 1 len        supp                  20.7            17.0      1.92       58 #>   p.value method            alternative effectsize estimate conf.level conf.low #>     <dbl> <chr>             <chr>       <chr>         <dbl>      <dbl>    <dbl> #> 1  0.0604 Two Sample t-test two.sided   Hedges' g     0.488       0.95  -0.0217 #>   conf.high conf.method conf.distribution n.obs expression #>       <dbl> <chr>       <chr>             <int> <list>     #> 1     0.993 ncp         t                    60 <language>  # ----------------------- non-parametric -----------------------------------  two_sample_test(ToothGrowth, supp, len, type = \"nonparametric\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 statistic p.value method                 alternative #>   <chr>      <chr>          <dbl>   <dbl> <chr>                  <chr>       #> 1 len        supp            576.  0.0645 Wilcoxon rank sum test two.sided   #>   effectsize        estimate conf.level conf.low conf.high conf.method n.obs #>   <chr>                <dbl>      <dbl>    <dbl>     <dbl> <chr>       <int> #> 1 r (rank biserial)    0.279       0.95 -0.00812     0.523 normal         60 #>   expression #>   <list>     #> 1 <language>  # ----------------------- robust --------------------------------------------  two_sample_test(ToothGrowth, supp, len, type = \"robust\") #> # A tibble: 1 × 11 #>   statistic df.error p.value #>       <dbl>    <dbl>   <dbl> #> 1      2.29     33.5  0.0286 #>   method                                               #>   <chr>                                                #> 1 Yuen's test on trimmed means for independent samples #>   effectsize                                              estimate conf.level #>   <chr>                                                      <dbl>      <dbl> #> 1 Algina-Keselman-Penfield robust standardized difference    0.683       0.95 #>   conf.low conf.high n.obs expression #>      <dbl>     <dbl> <int> <list>     #> 1 -0.00736      2.36    60 <language>  # ----------------------- Bayesian ---------------------------------------  two_sample_test(ToothGrowth, supp, len, type = \"bayes\") #> # A tibble: 1 × 16 #>   term       effectsize      estimate conf.level conf.low conf.high    pd #>   <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl> #> 1 Difference Bayesian t-test     3.16       0.95   -0.338      6.78 0.961 #>   prior.distribution prior.location prior.scale  bf10 method          #>   <chr>                       <dbl>       <dbl> <dbl> <chr>           #> 1 cauchy                          0       0.707  1.20 Bayesian t-test #>   conf.method log_e_bf10 n.obs expression #>   <chr>            <dbl> <int> <list>     #> 1 ETI              0.181    60 <language>"},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"within-subjects-design-1","dir":"Articles > Web_only","previous_headings":"One-way ANOVAs","what":"within-subjects design","title":"Data frame outputs","text":"","code":"suppressPackageStartupMessages(library(afex))  # ----------------------- parametric ---------------------------------------  set.seed(123) oneway_anova(   data       = bugs_long,   x          = condition,   y          = desire,   paired     = TRUE,   subject.id = subject,   type       = \"p\" ) #> # A tibble: 1 × 18 #>   term      sumsq sum.squares.error    df df.error meansq statistic  p.value #>   <chr>     <dbl>             <dbl> <dbl>    <dbl>  <dbl>     <dbl>    <dbl> #> 1 condition  233.              984.  2.63     229.   4.30      20.6 8.27e-11 #>   method                                              effectsize       estimate #>   <chr>                                               <chr>               <dbl> #> 1 ANOVA estimation for factorial designs using 'afex' Omega2 (partial)   0.0783 #>   conf.level conf.low conf.high conf.method conf.distribution n.obs expression #>        <dbl>    <dbl>     <dbl> <chr>       <chr>             <int> <list>     #> 1       0.95   0.0280         1 ncp         F                    88 <language>  # ----------------------- non-parametric -----------------------------------  set.seed(123) oneway_anova(   data       = bugs_long,   x          = condition,   y          = desire,   paired     = TRUE,   subject.id = subject,   type       = \"np\" ) #> # A tibble: 1 × 15 #>   parameter1 parameter2 statistic df.error  p.value method                 #>   <chr>      <chr>          <dbl>    <dbl>    <dbl> <chr>                  #> 1 desire     condition       55.8        3 4.56e-12 Friedman rank sum test #>   effectsize  estimate conf.level conf.low conf.high conf.method          #>   <chr>          <dbl>      <dbl>    <dbl>     <dbl> <chr>                #> 1 Kendall's W    0.211       0.95    0.148         1 percentile bootstrap #>   conf.iterations n.obs expression #>             <int> <int> <list>     #> 1             100    88 <language>  # ----------------------- robust --------------------------------------------  set.seed(123) oneway_anova(   data       = bugs_long,   x          = condition,   y          = desire,   paired     = TRUE,   subject.id = subject,   type       = \"r\" ) #> # A tibble: 1 × 12 #>   statistic    df df.error  p.value #>       <dbl> <dbl>    <dbl>    <dbl> #> 1      21.0  2.73     145. 1.15e-10 #>   method                                                              #>   <chr>                                                               #> 1 A heteroscedastic one-way repeated measures ANOVA for trimmed means #>   effectsize                                                      estimate #>   <chr>                                                              <dbl> #> 1 Algina-Keselman-Penfield robust standardized difference average    0.664 #>   conf.level conf.low conf.high n.obs expression #>        <dbl>    <dbl>     <dbl> <int> <list>     #> 1       0.95    0.466     0.971    88 <language>  # ----------------------- Bayesian ---------------------------------------  set.seed(123) oneway_anova(   data       = bugs_long,   x          = condition,   y          = desire,   paired     = TRUE,   subject.id = subject,   type       = \"bayes\" ) #> # A tibble: 8 × 19 #>   term              pd prior.distribution prior.location prior.scale effect #>   <chr>          <dbl> <chr>                       <dbl>       <dbl> <chr>  #> 1 mu             1     cauchy                          0       0.707 fixed  #> 2 condition-HDHF 1     cauchy                          0       0.707 fixed  #> 3 condition-HDLF 0.861 cauchy                          0       0.707 fixed  #> 4 condition-LDHF 0.995 cauchy                          0       0.707 fixed  #> 5 condition-LDLF 1     cauchy                          0       0.707 fixed  #> 6 sig2           1     cauchy                          0       1     fixed  #> 7 g_condition    1     cauchy                          0       1     fixed  #> 8 g_.rowid       1     cauchy                          0       1     fixed  #>          bf10 method                          log_e_bf10 effectsize         #>         <dbl> <chr>                                <dbl> <chr>              #> 1 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #> 2 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #> 3 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #> 4 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #> 5 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #> 6 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #> 7 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #> 8 1372773377. Bayes factors for linear models       21.0 Bayesian R-squared #>   estimate std.dev conf.level conf.low conf.high conf.method component   n.obs #>      <dbl>   <dbl>      <dbl>    <dbl>     <dbl> <chr>       <chr>       <int> #> 1    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #> 2    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #> 3    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #> 4    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #> 5    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #> 6    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #> 7    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #> 8    0.529  0.0332       0.95    0.461     0.587 HDI         conditional    88 #>   expression #>   <list>     #> 1 <language> #> 2 <language> #> 3 <language> #> 4 <language> #> 5 <language> #> 6 <language> #> 7 <language> #> 8 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"between-subjects-design-1","dir":"Articles > Web_only","previous_headings":"One-way ANOVAs","what":"between-subjects design","title":"Data frame outputs","text":"","code":"# ----------------------- parametric ---------------------------------------  # unequal variance set.seed(123) oneway_anova(   data      = iris,   x         = Species,   y         = Sepal.Length,   type      = \"p\" ) #> # A tibble: 1 × 14 #>   statistic    df df.error  p.value #>       <dbl> <dbl>    <dbl>    <dbl> #> 1      139.     2     92.2 1.51e-28 #>   method                                                   effectsize estimate #>   <chr>                                                    <chr>         <dbl> #> 1 One-way analysis of means (not assuming equal variances) Omega2        0.743 #>   conf.level conf.low conf.high conf.method conf.distribution n.obs expression #>        <dbl>    <dbl>     <dbl> <chr>       <chr>             <int> <list>     #> 1       0.95    0.671         1 ncp         F                   150 <language>  # equal variance set.seed(123) oneway_anova(   data      = iris,   x         = Species,   y         = Sepal.Length,   var.equal = TRUE,   type      = \"p\" ) #> # A tibble: 1 × 14 #>   statistic    df df.error  p.value method                    effectsize #>       <dbl> <dbl>    <dbl>    <dbl> <chr>                     <chr>      #> 1      119.     2      147 1.67e-31 One-way analysis of means Omega2     #>   estimate conf.level conf.low conf.high conf.method conf.distribution n.obs #>      <dbl>      <dbl>    <dbl>     <dbl> <chr>       <chr>             <int> #> 1    0.612       0.95    0.534         1 ncp         F                   150 #>   expression #>   <list>     #> 1 <language>  # ----------------------- non-parametric -----------------------------------  set.seed(123) oneway_anova(   data      = iris,   x         = Species,   y         = Sepal.Length,   type      = \"np\" ) #> # A tibble: 1 × 15 #>   parameter1   parameter2 statistic df.error  p.value #>   <chr>        <chr>          <dbl>    <int>    <dbl> #> 1 Sepal.Length Species         96.9        2 8.92e-22 #>   method                       effectsize      estimate conf.level conf.low #>   <chr>                        <chr>              <dbl>      <dbl>    <dbl> #> 1 Kruskal-Wallis rank sum test Epsilon2 (rank)    0.651       0.95    0.595 #>   conf.high conf.method          conf.iterations n.obs expression #>       <dbl> <chr>                          <int> <int> <list>     #> 1         1 percentile bootstrap             100   150 <language>  # ----------------------- robust --------------------------------------------  set.seed(123) oneway_anova(   data      = iris,   x         = Species,   y         = Sepal.Length,   type      = \"r\" ) #> # A tibble: 1 × 12 #>   statistic    df df.error p.value #>       <dbl> <dbl>    <dbl>   <dbl> #> 1      112.     2     53.8       0 #>   method                                            #>   <chr>                                             #> 1 A heteroscedastic one-way ANOVA for trimmed means #>   effectsize                         estimate conf.level conf.low conf.high #>   <chr>                                 <dbl>      <dbl>    <dbl>     <dbl> #> 1 Explanatory measure of effect size    0.846       0.95    0.759     0.933 #>   n.obs expression #>   <int> <list>     #> 1   150 <language>  # ----------------------- Bayesian ---------------------------------------  set.seed(123) oneway_anova(   data      = iris,   x         = Species,   y         = Sepal.Length,   type      = \"bayes\" ) #> # A tibble: 6 × 17 #>   term                  pd prior.distribution prior.location prior.scale    bf10 #>   <chr>              <dbl> <chr>                       <dbl>       <dbl>   <dbl> #> 1 mu                 1     cauchy                          0       0.707 1.87e28 #> 2 Species-setosa     1     cauchy                          0       0.707 1.87e28 #> 3 Species-versicolor 0.936 cauchy                          0       0.707 1.87e28 #> 4 Species-virginica  1     cauchy                          0       0.707 1.87e28 #> 5 sig2               1     cauchy                          0       0.707 1.87e28 #> 6 g_Species          1     cauchy                          0       0.707 1.87e28 #>   method                          log_e_bf10 effectsize         estimate std.dev #>   <chr>                                <dbl> <chr>                 <dbl>   <dbl> #> 1 Bayes factors for linear models       65.1 Bayesian R-squared    0.612  0.0311 #> 2 Bayes factors for linear models       65.1 Bayesian R-squared    0.612  0.0311 #> 3 Bayes factors for linear models       65.1 Bayesian R-squared    0.612  0.0311 #> 4 Bayes factors for linear models       65.1 Bayesian R-squared    0.612  0.0311 #> 5 Bayes factors for linear models       65.1 Bayesian R-squared    0.612  0.0311 #> 6 Bayes factors for linear models       65.1 Bayesian R-squared    0.612  0.0311 #>   conf.level conf.low conf.high conf.method n.obs expression #>        <dbl>    <dbl>     <dbl> <chr>       <int> <list>     #> 1       0.95    0.544     0.667 HDI           150 <language> #> 2       0.95    0.544     0.667 HDI           150 <language> #> 3       0.95    0.544     0.667 HDI           150 <language> #> 4       0.95    0.544     0.667 HDI           150 <language> #> 5       0.95    0.544     0.667 HDI           150 <language> #> 6       0.95    0.544     0.667 HDI           150 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"contingency-table-analyses","dir":"Articles > Web_only","previous_headings":"","what":"Contingency table analyses","title":"Data frame outputs","text":"","code":"if (identical(Sys.getenv(\"NOT_CRAN\"), \"true\")) {   #### -------------------- association test ------------------------ ####    # ------------------------ frequentist ---------------------------------    # unpaired    set.seed(123)   contingency_table(     data   = mtcars,     x      = am,     y      = vs,     paired = FALSE   )    # paired    paired_data <- tibble(     response_before = structure(c(1L, 2L, 1L, 2L), levels = c(\"no\", \"yes\"), class = \"factor\"),     response_after = structure(c(1L, 1L, 2L, 2L), levels = c(\"no\", \"yes\"), class = \"factor\"),     Freq = c(65L, 25L, 5L, 5L)   )    set.seed(123)   contingency_table(     data   = paired_data,     x      = response_before,     y      = response_after,     paired = TRUE,     counts = Freq   )    # ------------------------ Bayesian -------------------------------------    # unpaired    set.seed(123)   contingency_table(     data = mtcars,     x = am,     y = vs,     paired = FALSE,     type = \"bayes\"   )    # paired    set.seed(123)   contingency_table(     data = paired_data,     x = response_before,     y = response_after,     paired = TRUE,     counts = Freq,     type = \"bayes\"   )    #### -------------------- goodness-of-fit test -------------------- ####    # ------------------------ frequentist ---------------------------------    set.seed(123)   contingency_table(     data   = as.data.frame(HairEyeColor),     x      = Eye,     counts = Freq   )    # ------------------------ Bayesian -------------------------------------    set.seed(123)   contingency_table(     data   = as.data.frame(HairEyeColor),     x      = Eye,     counts = Freq,     ratio  = c(0.2, 0.2, 0.3, 0.3),     type   = \"bayes\"   ) } #> # A tibble: 1 × 4 #>      bf10 prior.scale method                                      expression #>     <dbl>       <dbl> <chr>                                       <list>     #> 1 4.17e55           1 Bayesian one-way contingency table analysis <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"correlation-analyses","dir":"Articles > Web_only","previous_headings":"","what":"Correlation analyses","title":"Data frame outputs","text":"","code":"# for reproducibility set.seed(123)  # ----------------------- parametric -----------------------  corr_test(mtcars, wt, mpg, type = \"parametric\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 effectsize          estimate conf.level conf.low #>   <chr>      <chr>      <chr>                  <dbl>      <dbl>    <dbl> #> 1 wt         mpg        Pearson correlation   -0.868       0.95   -0.934 #>   conf.high statistic df.error  p.value method              n.obs conf.method #>       <dbl>     <dbl>    <int>    <dbl> <chr>               <int> <chr>       #> 1    -0.744     -9.56       30 1.29e-10 Pearson correlation    32 normal      #>   expression #>   <list>     #> 1 <language>  # ----------------------- non-parametric -------------------  corr_test(mtcars, wt, mpg, type = \"nonparametric\") #> # A tibble: 1 × 13 #>   parameter1 parameter2 effectsize           estimate conf.level conf.low #>   <chr>      <chr>      <chr>                   <dbl>      <dbl>    <dbl> #> 1 wt         mpg        Spearman correlation   -0.886       0.95   -0.945 #>   conf.high statistic  p.value method               n.obs conf.method expression #>       <dbl>     <dbl>    <dbl> <chr>                <int> <chr>       <list>     #> 1    -0.774    10292. 1.49e-11 Spearman correlation    32 normal      <language>  # ----------------------- robust ---------------------------  corr_test(mtcars, wt, mpg, type = \"robust\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 effectsize                     estimate conf.level #>   <chr>      <chr>      <chr>                             <dbl>      <dbl> #> 1 wt         mpg        Winsorized Pearson correlation   -0.864       0.95 #>   conf.low conf.high statistic df.error  p.value method                         #>      <dbl>     <dbl>     <dbl>    <int>    <dbl> <chr>                          #> 1   -0.932    -0.738     -9.41       30 1.84e-10 Winsorized Pearson correlation #>   n.obs conf.method expression #>   <int> <chr>       <list>     #> 1    32 normal      <language>  # ----------------------- Bayesian -------------------------  corr_test(mtcars, wt, mpg, type = \"bayes\") #> # A tibble: 1 × 17 #>   parameter1 parameter2 effectsize                   estimate conf.level #>   <chr>      <chr>      <chr>                           <dbl>      <dbl> #> 1 wt         mpg        Bayesian Pearson correlation   -0.843       0.95 #>   conf.low conf.high    pd rope.percentage prior.distribution prior.location #>      <dbl>     <dbl> <dbl>           <dbl> <chr>                       <dbl> #> 1   -0.934    -0.734     1               0 beta                         1.41 #>   prior.scale      bf10 method                       n.obs conf.method #>         <dbl>     <dbl> <chr>                        <int> <chr>       #> 1        1.41 56223033. Bayesian Pearson correlation    32 HDI         #>   expression #>   <list>     #> 1 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"meta-analysis","dir":"Articles > Web_only","previous_headings":"","what":"Meta-analysis","title":"Data frame outputs","text":"","code":"library(metaplus)  # renaming columns to `{statsExpressions}` conventions df <- dplyr::rename(mag, estimate = yi, std.error = sei)  # ----------------------- parametric ---------------------------------------  set.seed(123) meta_analysis(df, type = \"parametric\") #> # A tibble: 1 × 14 #>   term    effectsize                     estimate std.error conf.level conf.low #>   <chr>   <chr>                             <dbl>     <dbl>      <dbl>    <dbl> #> 1 Overall meta-analytic summary estimate   -0.767     0.212       0.95    -1.18 #>   conf.high statistic  p.value weight method                        conf.method #>       <dbl>     <dbl>    <dbl>  <dbl> <chr>                         <chr>       #> 1    -0.351     -3.62 0.000295     NA Meta-analysis using 'metafor' Wald        #>   n.obs expression #>   <int> <list>     #> 1    16 <language>  # ----------------------- robust --------------------------------------------  set.seed(123) meta_analysis(df, type = \"robust\") #> # A tibble: 1 × 14 #>   term    effectsize                     estimate std.error conf.low conf.high #>   <chr>   <chr>                             <dbl>     <dbl>    <dbl>     <dbl> #> 1 Overall meta-analytic summary estimate   -0.746     0.233    -1.26    -0.344 #>   statistic  p.value weight conf.level method                                #>       <dbl>    <dbl>  <dbl>      <dbl> <chr>                                 #> 1     -3.20 0.000501     NA       0.95 Robust meta-analysis using 'metaplus' #>   conf.method n.obs expression #>   <chr>       <int> <list>     #> 1 Wald           16 <language>  # ----------------------- Bayesian ---------------------------------------  # suppress warnings about divergent transitions after warmup set.seed(123) suppressWarnings(meta_analysis(df, type = \"bayes\")) #> # A tibble: 2 × 20 #>   term    effectsize                       estimate std.error conf.level #>   <chr>   <chr>                               <dbl>     <dbl>      <dbl> #> 1 Overall meta-analytic posterior estimate   -0.643     0.220       0.95 #> 2 tau     meta-analytic posterior estimate    0.484     0.182       0.95 #>   conf.low conf.high weight  bf10  rhat   ess component prior.distribution #>      <dbl>     <dbl>  <dbl> <dbl> <dbl> <dbl> <chr>     <chr>              #> 1   -1.11     -0.242     NA  53.0     1 3507  meta      Student's t        #> 2    0.205     0.909     NA  53.0     1 3460. meta      Inverse gamma      #>   prior.location prior.scale method                                 conf.method #>            <dbl>       <dbl> <chr>                                  <chr>       #> 1              0       0.707 Bayesian meta-analysis using 'metaBMA' ETI         #> 2              1       0.15  Bayesian meta-analysis using 'metaBMA' ETI         #>   log_e_bf10 n.obs expression #>        <dbl> <int> <list>     #> 1       3.97    16 <language> #> 2       3.97    16 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"centrality-description","dir":"Articles > Web_only","previous_headings":"","what":"Centrality description","title":"Data frame outputs","text":"","code":"# for reproducibility set.seed(123)  # ----------------------- parametric -----------------------  centrality_description(iris, Species, Sepal.Length, type = \"parametric\") #> # A tibble: 3 × 12 #>   Species    Sepal.Length std.dev   iqr   min   max skewness kurtosis n.obs #>   <fct>             <dbl>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int> #> 1 setosa             5.01   0.352 0.400   4.3   5.8    0.120  -0.253     50 #> 2 versicolor         5.94   0.516 0.7     4.9   7      0.105  -0.533     50 #> 3 virginica          6.59   0.636 0.750   4.9   7.9    0.118   0.0329    50 #>   missing.obs expression n.expression           #>         <int> <list>     <chr>                  #> 1           0 <language> \"setosa\\n(n = 50)\"     #> 2           0 <language> \"versicolor\\n(n = 50)\" #> 3           0 <language> \"virginica\\n(n = 50)\"  # ----------------------- non-parametric -------------------  centrality_description(mtcars, am, wt, type = \"nonparametric\") #> # A tibble: 2 × 12 #>      am    wt   mad   iqr   min   max skewness kurtosis n.obs missing.obs #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int>       <int> #> 1     0  3.52 0.452 0.41   2.46  5.42    1.15     1.06     19           0 #> 2     1  2.32 0.682 0.942  1.51  3.57    0.269   -0.654    13           0 #>   expression n.expression  #>   <list>     <chr>         #> 1 <language> \"0\\n(n = 19)\" #> 2 <language> \"1\\n(n = 13)\"  # ----------------------- robust ---------------------------  centrality_description(ToothGrowth, supp, len, type = \"robust\") #> # A tibble: 2 × 12 #>   supp    len std.dev   iqr   min   max skewness kurtosis n.obs missing.obs #>   <fct> <dbl>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int>       <int> #> 1 OJ     21.7    6.61  10.9   8.2  30.9   -0.580   -0.831    30           0 #> 2 VC     16.6    8.27  12.5   4.2  33.9    0.306   -0.700    30           0 #>   expression n.expression   #>   <list>     <chr>          #> 1 <language> \"OJ\\n(n = 30)\" #> 2 <language> \"VC\\n(n = 30)\"  # ----------------------- Bayesian -------------------------  centrality_description(sleep, group, extra, type = \"bayes\") #> # A tibble: 2 × 11 #>   group  extra   iqr   min   max skewness kurtosis n.obs missing.obs expression #>   <fct>  <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int>       <int> <list>     #> 1 1     0.0579  2.8   -1.6   3.7    0.581   -0.630    10           0 <language> #> 2 2     0.973   3.82  -0.1   5.5    0.386   -1.42     10           0 <language> #>   n.expression  #>   <chr>         #> 1 \"1\\n(n = 10)\" #> 2 \"2\\n(n = 10)\""},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"between-subjects-design-2","dir":"Articles > Web_only","previous_headings":"Pairwise comparisons for one-way design","what":"Between-subjects design","title":"Data frame outputs","text":"","code":"# ----------------------- parametric -----------------------  # if `var.equal = TRUE`, then Student's *t*-test will be run pairwise_comparisons(   data            = ggplot2::msleep,   x               = vore,   y               = brainwt,   type            = \"parametric\",   var.equal       = TRUE,   paired          = FALSE,   p.adjust.method = \"bonferroni\" ) #> # A tibble: 6 × 6 #>   group1  group2  p.value p.adjust.method test        expression #>   <chr>   <chr>     <dbl> <chr>           <chr>       <list>     #> 1 carni   herbi     1     Bonferroni      Student's t <language> #> 2 carni   insecti   1     Bonferroni      Student's t <language> #> 3 carni   omni      1     Bonferroni      Student's t <language> #> 4 herbi   insecti   1     Bonferroni      Student's t <language> #> 5 herbi   omni      0.979 Bonferroni      Student's t <language> #> 6 insecti omni      1     Bonferroni      Student's t <language>  # if `var.equal = FALSE`, then Games-Howell test will be run pairwise_comparisons(   data            = ggplot2::msleep,   x               = vore,   y               = brainwt,   type            = \"parametric\",   var.equal       = FALSE,   paired          = FALSE,   p.adjust.method = \"bonferroni\" ) #> # A tibble: 6 × 9 #>   group1  group2  statistic p.value alternative distribution p.adjust.method #>   <chr>   <chr>       <dbl>   <dbl> <chr>       <chr>        <chr>           #> 1 carni   herbi        2.17       1 two.sided   q            Bonferroni      #> 2 carni   insecti     -2.17       1 two.sided   q            Bonferroni      #> 3 carni   omni         1.10       1 two.sided   q            Bonferroni      #> 4 herbi   insecti     -2.41       1 two.sided   q            Bonferroni      #> 5 herbi   omni        -1.87       1 two.sided   q            Bonferroni      #> 6 insecti omni         2.19       1 two.sided   q            Bonferroni      #>   test         expression #>   <chr>        <list>     #> 1 Games-Howell <language> #> 2 Games-Howell <language> #> 3 Games-Howell <language> #> 4 Games-Howell <language> #> 5 Games-Howell <language> #> 6 Games-Howell <language>  # ----------------------- non-parametric -------------------  pairwise_comparisons(   data            = ggplot2::msleep,   x               = vore,   y               = brainwt,   type            = \"nonparametric\",   paired          = FALSE,   p.adjust.method = \"none\" ) #> # A tibble: 6 × 9 #>   group1  group2  statistic p.value alternative distribution p.adjust.method #>   <chr>   <chr>       <dbl>   <dbl> <chr>       <chr>        <chr>           #> 1 carni   herbi       0.582  0.561  two.sided   z            None            #> 2 carni   insecti     1.88   0.0595 two.sided   z            None            #> 3 carni   omni        1.14   0.254  two.sided   z            None            #> 4 herbi   insecti     1.63   0.102  two.sided   z            None            #> 5 herbi   omni        0.717  0.474  two.sided   z            None            #> 6 insecti omni        1.14   0.254  two.sided   z            None            #>   test  expression #>   <chr> <list>     #> 1 Dunn  <language> #> 2 Dunn  <language> #> 3 Dunn  <language> #> 4 Dunn  <language> #> 5 Dunn  <language> #> 6 Dunn  <language>  # ----------------------- robust ---------------------------  pairwise_comparisons(   data            = ggplot2::msleep,   x               = vore,   y               = brainwt,   type            = \"robust\",   paired          = FALSE,   p.adjust.method = \"fdr\" ) #> # A tibble: 6 × 10 #>   group1  group2  estimate conf.level conf.low conf.high p.value p.adjust.method #>   <chr>   <chr>      <dbl>      <dbl>    <dbl>     <dbl>   <dbl> <chr>           #> 1 carni   herbi   -0.0323        0.95  -0.248     0.184    0.790 FDR             #> 2 carni   insecti  0.0451        0.95  -0.0484    0.139    0.552 FDR             #> 3 carni   omni     0.00520       0.95  -0.114     0.124    0.898 FDR             #> 4 herbi   insecti  0.0774        0.95  -0.133     0.288    0.552 FDR             #> 5 herbi   omni     0.0375        0.95  -0.182     0.257    0.790 FDR             #> 6 insecti omni    -0.0399        0.95  -0.142     0.0625   0.552 FDR             #>   test                 expression #>   <chr>                <list>     #> 1 Yuen's trimmed means <language> #> 2 Yuen's trimmed means <language> #> 3 Yuen's trimmed means <language> #> 4 Yuen's trimmed means <language> #> 5 Yuen's trimmed means <language> #> 6 Yuen's trimmed means <language>  # ----------------------- Bayesian -------------------------  pairwise_comparisons(   data   = ggplot2::msleep,   x      = vore,   y      = brainwt,   type   = \"bayes\",   paired = FALSE ) #> # A tibble: 6 × 18 #>   group1  group2  term       effectsize      estimate conf.level conf.low #>   <chr>   <chr>   <chr>      <chr>              <dbl>      <dbl>    <dbl> #> 1 carni   herbi   Difference Bayesian t-test  -0.376        0.95  -1.36   #> 2 carni   insecti Difference Bayesian t-test   0.0339       0.95  -0.0440 #> 3 carni   omni    Difference Bayesian t-test  -0.0447       0.95  -0.241  #> 4 herbi   insecti Difference Bayesian t-test   0.353        0.95  -0.733  #> 5 herbi   omni    Difference Bayesian t-test   0.364        0.95  -0.313  #> 6 insecti omni    Difference Bayesian t-test  -0.0766       0.95  -0.337  #>   conf.high    pd prior.distribution prior.location prior.scale  bf10 #>       <dbl> <dbl> <chr>                       <dbl>       <dbl> <dbl> #> 1     0.508 0.800 cauchy                          0       0.707 0.540 #> 2     0.127 0.812 cauchy                          0       0.707 0.718 #> 3     0.145 0.688 cauchy                          0       0.707 0.427 #> 4     1.62  0.742 cauchy                          0       0.707 0.540 #> 5     1.10  0.848 cauchy                          0       0.707 0.571 #> 6     0.164 0.743 cauchy                          0       0.707 0.545 #>   conf.method log_e_bf10 n.obs expression test        #>   <chr>            <dbl> <int> <list>     <chr>       #> 1 ETI             -0.617    29 <language> Student's t #> 2 ETI             -0.332    14 <language> Student's t #> 3 ETI             -0.851    26 <language> Student's t #> 4 ETI             -0.616    25 <language> Student's t #> 5 ETI             -0.560    37 <language> Student's t #> 6 ETI             -0.606    22 <language> Student's t"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"within-subjects-design-2","dir":"Articles > Web_only","previous_headings":"Pairwise comparisons for one-way design","what":"Within-subjects design","title":"Data frame outputs","text":"","code":"# ----------------------- parametric -----------------------  pairwise_comparisons(   data            = bugs_long,   x               = condition,   y               = desire,   subject.id      = subject,   type            = \"parametric\",   paired          = TRUE,   p.adjust.method = \"BH\" ) #> # A tibble: 6 × 6 #>   group1 group2  p.value p.adjust.method test        expression #>   <chr>  <chr>     <dbl> <chr>           <chr>       <list>     #> 1 HDHF   HDLF   1.06e- 3 FDR             Student's t <language> #> 2 HDHF   LDHF   7.02e- 2 FDR             Student's t <language> #> 3 HDHF   LDLF   3.95e-12 FDR             Student's t <language> #> 4 HDLF   LDHF   6.74e- 2 FDR             Student's t <language> #> 5 HDLF   LDLF   1.99e- 3 FDR             Student's t <language> #> 6 LDHF   LDLF   6.66e- 9 FDR             Student's t <language>  # ----------------------- non-parametric -------------------  pairwise_comparisons(   data            = bugs_long,   x               = condition,   y               = desire,   subject.id      = subject,   type            = \"nonparametric\",   paired          = TRUE,   p.adjust.method = \"BY\" ) #> # A tibble: 6 × 9 #>   group1 group2 statistic  p.value alternative distribution p.adjust.method #>   <chr>  <chr>      <dbl>    <dbl> <chr>       <chr>        <chr>           #> 1 HDHF   HDLF        4.78 1.44e- 5 two.sided   t            BY              #> 2 HDHF   LDHF        2.44 4.47e- 2 two.sided   t            BY              #> 3 HDHF   LDLF        8.01 5.45e-13 two.sided   t            BY              #> 4 HDLF   LDHF        2.34 4.96e- 2 two.sided   t            BY              #> 5 HDLF   LDLF        3.23 5.05e- 3 two.sided   t            BY              #> 6 LDHF   LDLF        5.57 4.64e- 7 two.sided   t            BY              #>   test           expression #>   <chr>          <list>     #> 1 Durbin-Conover <language> #> 2 Durbin-Conover <language> #> 3 Durbin-Conover <language> #> 4 Durbin-Conover <language> #> 5 Durbin-Conover <language> #> 6 Durbin-Conover <language>  # ----------------------- robust ---------------------------  pairwise_comparisons(   data            = bugs_long,   x               = condition,   y               = desire,   subject.id      = subject,   type            = \"robust\",   paired          = TRUE,   p.adjust.method = \"hommel\" ) #> # A tibble: 6 × 11 #>   group1 group2 estimate conf.level conf.low conf.high     p.value  p.crit #>   <chr>  <chr>     <dbl>      <dbl>    <dbl>     <dbl>       <dbl>   <dbl> #> 1 HDHF   HDLF      1.03        0.95   0.140      1.92  0.00999     0.0127  #> 2 HDHF   LDHF      0.454       0.95  -0.104      1.01  0.0520      0.025   #> 3 HDHF   LDLF      1.95        0.95   1.09       2.82  0.000000564 0.00851 #> 4 HDLF   LDHF     -0.676       0.95  -1.61       0.256 0.0520      0.05    #> 5 HDLF   LDLF      0.889       0.95   0.0244     1.75  0.0203      0.0169  #> 6 LDHF   LDLF      1.35        0.95   0.560      2.14  0.000102    0.0102  #>   p.adjust.method test                 expression #>   <chr>           <chr>                <list>     #> 1 Hommel          Yuen's trimmed means <language> #> 2 Hommel          Yuen's trimmed means <language> #> 3 Hommel          Yuen's trimmed means <language> #> 4 Hommel          Yuen's trimmed means <language> #> 5 Hommel          Yuen's trimmed means <language> #> 6 Hommel          Yuen's trimmed means <language>  # ----------------------- Bayesian -------------------------  pairwise_comparisons(   data       = bugs_long,   x          = condition,   y          = desire,   subject.id = subject,   type       = \"bayes\",   paired     = TRUE,   bf.prior   = 0.77 ) #> # A tibble: 6 × 18 #>   group1 group2 term       effectsize      estimate conf.level conf.low #>   <chr>  <chr>  <chr>      <chr>              <dbl>      <dbl>    <dbl> #> 1 HDHF   HDLF   Difference Bayesian t-test    1.13        0.95   0.476  #> 2 HDHF   LDHF   Difference Bayesian t-test    0.458       0.95  -0.0405 #> 3 HDHF   LDLF   Difference Bayesian t-test    2.14        0.95   1.63   #> 4 HDLF   LDHF   Difference Bayesian t-test   -0.656       0.95  -1.31   #> 5 HDLF   LDLF   Difference Bayesian t-test    0.980       0.95   0.385  #> 6 LDHF   LDLF   Difference Bayesian t-test    1.66        0.95   1.15   #>   conf.high    pd prior.distribution prior.location prior.scale     bf10 #>       <dbl> <dbl> <chr>                       <dbl>       <dbl>    <dbl> #> 1    1.73   1.00  cauchy                          0        0.77 3.95e+ 1 #> 2    0.953  0.965 cauchy                          0        0.77 5.42e- 1 #> 3    2.65   1     cauchy                          0        0.77 1.22e+10 #> 4    0.0590 0.966 cauchy                          0        0.77 6.50e- 1 #> 5    1.57   1.00  cauchy                          0        0.77 1.72e+ 1 #> 6    2.17   1     cauchy                          0        0.77 4.78e+ 6 #>   conf.method log_e_bf10 n.obs expression test        #>   <chr>            <dbl> <int> <list>     <chr>       #> 1 ETI              3.68     88 <language> Student's t #> 2 ETI             -0.612    88 <language> Student's t #> 3 ETI             23.2      88 <language> Student's t #> 4 ETI             -0.430    88 <language> Student's t #> 5 ETI              2.84     88 <language> Student's t #> 6 ETI             15.4      88 <language> Student's t"},{"path":"https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html","id":"suggestions","dir":"Articles > Web_only","previous_headings":"","what":"Suggestions","title":"Data frame outputs","text":"find bugs suggestions/remarks, please file issue GitHub: https://github.com/IndrajeetPatil/statsExpressions/issues","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Indrajeet Patil. Maintainer, author, copyright holder.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":"@Article{,   doi = {10.21105/joss.03236},   year = {2021},   publisher = {{The Open Journal}},   volume = {6},   number = {61},   pages = {3236},   author = {Indrajeet Patil},   title = {{statsExpressions: {R} Package for Tidy Dataframes and Expressions with Statistical Details}},   journal = {{Journal of Open Source Software}}, }"},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"introduction-","dir":"","previous_headings":"","what":"Introduction","title":"Tidy Dataframes and Expressions with Statistical Details","text":"statsExpressions package two key aims: provide consistent syntax statistical analysis tidy data (pipe-friendly manner), provide statistical expressions (pre-formatted -text statistical results) plotting functions. Statistical packages exhibit substantial diversity terms syntax expected input type. can make difficult switch one statistical approach another. example, functions expect vectors inputs, others expect dataframes. Depending whether repeated measures design , different functions might expect data wide long format. functions can internally omit missing values, functions error presence. Furthermore, someone wishes utilize objects returned packages downstream workflow, straightforward either even functions package can return list, matrix, array, dataframe, etc., depending function. statsExpressions comes : can thought unified portal functionality underlying packages can accessed, simpler interface requirement change data format. package forms statistical processing backend ggstatsplot package. documentation, see dedicated website.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Linux, statsExpressions installation may require additional system dependencies, can checked using:","code":"pak::pkg_sysreqs(\"statsExpressions\")"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Tidy Dataframes and Expressions with Statistical Details","text":"package can cited :","code":"citation(\"statsExpressions\") To cite package 'statsExpressions' in publications use:    Patil, I., (2021). statsExpressions: R Package for Tidy Dataframes   and Expressions with Statistical Details. Journal of Open Source   Software, 6(61), 3236, https://doi.org/10.21105/joss.03236  A BibTeX entry for LaTeX users is    @Article{,     doi = {10.21105/joss.03236},     year = {2021},     publisher = {{The Open Journal}},     volume = {6},     number = {61},     pages = {3236},     author = {Indrajeet Patil},     title = {{statsExpressions: {R} Package for Tidy Dataframes and Expressions with Statistical Details}},     journal = {{Journal of Open Source Software}},   }"},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"summary-of-functionality","dir":"","previous_headings":"","what":"Summary of functionality","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Summary available analyses Summary details available analyses Summary supported statistical approaches","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"tidy-dataframes-from-statistical-analysis","dir":"","previous_headings":"","what":"Tidy dataframes from statistical analysis","title":"Tidy Dataframes and Expressions with Statistical Details","text":"illustrate simplicity syntax, let’s say want run one-way ANOVA. first run non-parametric ANOVA decide run robust ANOVA instead, syntax remains statistical approach can modified changing single argument: possible output dataframes functions tabulated : https://indrajeetpatil.github.io/statsExpressions/articles/web_only/dataframe_outputs.html Needless say also work kable function generate table: functions also compatible popular data manipulation packages. example, let’s say want run one-sample t-test levels certain grouping variable. can use dplyr :","code":"mtcars %>% oneway_anova(cyl, wt, type = \"nonparametric\") #> # A tibble: 1 × 15 #>   parameter1 parameter2 statistic df.error   p.value #>   <chr>      <chr>          <dbl>    <int>     <dbl> #> 1 wt         cyl             22.8        2 0.0000112 #>   method                       effectsize      estimate conf.level conf.low #>   <chr>                        <chr>              <dbl>      <dbl>    <dbl> #> 1 Kruskal-Wallis rank sum test Epsilon2 (rank)    0.736       0.95    0.624 #>   conf.high conf.method          conf.iterations n.obs expression #>       <dbl> <chr>                          <int> <int> <list>     #> 1         1 percentile bootstrap             100    32 <language>  mtcars %>% oneway_anova(cyl, wt, type = \"robust\") #> # A tibble: 1 × 12 #>   statistic    df df.error p.value #>       <dbl> <dbl>    <dbl>   <dbl> #> 1      12.7     2     12.2 0.00102 #>   method                                            #>   <chr>                                             #> 1 A heteroscedastic one-way ANOVA for trimmed means #>   effectsize                         estimate conf.level conf.low conf.high #>   <chr>                                 <dbl>      <dbl>    <dbl>     <dbl> #> 1 Explanatory measure of effect size     1.05       0.95    0.843      1.50 #>   n.obs expression #>   <int> <list>     #> 1    32 <language> set.seed(123)  # one-sample robust t-test # we will leave `expression` column out; it's not needed for using only the dataframe mtcars %>%   one_sample_test(wt, test.value = 3, type = \"robust\") %>%   dplyr::select(-expression) %>%   knitr::kable() # for reproducibility set.seed(123) library(dplyr)  # grouped operation # running one-sample test for all levels of grouping variable `cyl` mtcars %>%   group_by(cyl) %>%   group_modify(~ one_sample_test(.x, wt, test.value = 3), .keep = TRUE) %>%   ungroup() #> # A tibble: 3 × 16 #>     cyl    mu statistic df.error  p.value method            alternative #>   <dbl> <dbl>     <dbl>    <dbl>    <dbl> <chr>             <chr>       #> 1     4     3    -4.16        10 0.00195  One Sample t-test two.sided   #> 2     6     3     0.870        6 0.418    One Sample t-test two.sided   #> 3     8     3     4.92        13 0.000278 One Sample t-test two.sided   #>   effectsize estimate conf.level conf.low conf.high conf.method #>   <chr>         <dbl>      <dbl>    <dbl>     <dbl> <chr>       #> 1 Hedges' g    -1.16        0.95   -1.88     -0.402 ncp         #> 2 Hedges' g     0.286       0.95   -0.388     0.937 ncp         #> 3 Hedges' g     1.24        0.95    0.544     1.91  ncp         #>   conf.distribution n.obs expression #>   <chr>             <int> <list>     #> 1 t                    11 <language> #> 2 t                     7 <language> #> 3 t                    14 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"using-expressions-in-custom-plots","dir":"","previous_headings":"","what":"Using expressions in custom plots","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Note expression means pre-formatted -text statistical result. addition details contained dataframe, also column titled expression, contains expression statistical details can displayed plot. statistical test expressions, default template attempt follow gold standard statistical reporting. example, results Welch’s t-test:  Let’s load needed library visualization:","code":"library(ggplot2)"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"expressions-for-centrality-measure","dir":"","previous_headings":"","what":"Expressions for centrality measure","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Note used geometric layer, expression need parsed.  examples supported analyses.","code":"# displaying mean for each level of `cyl` centrality_description(mtcars, cyl, wt) |>   ggplot(aes(cyl, wt)) +   geom_point() +   geom_label(aes(label = expression), parse = TRUE)"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"expressions-for-one-way-anovas","dir":"","previous_headings":"","what":"Expressions for one-way ANOVAs","title":"Tidy Dataframes and Expressions with Statistical Details","text":"returned data frame always column called expression. Assuming single result need display plot, use plot, two options: extract expression list column (results_data$expression[[1]]) without parsing use list column , case need parse (parse(text = results_data$expression)) want display one expression plot, parse .","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"between-subjects-design","dir":"","previous_headings":"Expressions for one-way ANOVAs","what":"Between-subjects design","title":"Tidy Dataframes and Expressions with Statistical Details","text":"","code":"set.seed(123) library(ggridges)  results_data <- oneway_anova(iris, Species, Sepal.Length, type = \"robust\")  # create a ridgeplot ggplot(iris, aes(x = Sepal.Length, y = Species)) +   geom_density_ridges() +   labs(     title = \"A heteroscedastic one-way ANOVA for trimmed means\",     subtitle = results_data$expression[[1]]   )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"within-subjects-design","dir":"","previous_headings":"Expressions for one-way ANOVAs","what":"Within-subjects design","title":"Tidy Dataframes and Expressions with Statistical Details","text":"","code":"set.seed(123) library(WRS2) library(ggbeeswarm)  results_data <- oneway_anova(   WineTasting,   Wine,   Taste,   paired = TRUE,   subject.id = Taster,   type = \"np\" )  ggplot2::ggplot(WineTasting, aes(Wine, Taste, color = Wine)) +   geom_quasirandom() +   labs(     title = \"Friedman's rank sum test\",     subtitle = parse(text = results_data$expression)   )"},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"between-subjects-design-1","dir":"","previous_headings":"Expressions for two-sample tests","what":"Between-subjects design","title":"Tidy Dataframes and Expressions with Statistical Details","text":"","code":"set.seed(123) library(gghalves)  results_data <- two_sample_test(ToothGrowth, supp, len)  ggplot(ToothGrowth, aes(supp, len)) +   geom_half_dotplot() +   labs(     title = \"Two-Sample Welch's t-test\",     subtitle = parse(text = results_data$expression)   )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"within-subjects-design-1","dir":"","previous_headings":"Expressions for two-sample tests","what":"Within-subjects design","title":"Tidy Dataframes and Expressions with Statistical Details","text":"","code":"set.seed(123) library(tidyr) library(PairedData) data(PrisonStress)  # get data in tidy format df <- pivot_longer(PrisonStress, starts_with(\"PSS\"), names_to = \"PSS\", values_to = \"stress\")  results_data <- two_sample_test(   data = df,   x = PSS,   y = stress,   paired = TRUE,   subject.id = Subject,   type = \"np\" )  # plot paired.plotProfiles(PrisonStress, \"PSSbefore\", \"PSSafter\", subjects = \"Subject\") +   labs(     title = \"Two-sample Wilcoxon paired test\",     subtitle = parse(text = results_data$expression)   )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"expressions-for-one-sample-tests","dir":"","previous_headings":"","what":"Expressions for one-sample tests","title":"Tidy Dataframes and Expressions with Statistical Details","text":"","code":"set.seed(123)  # dataframe with results results_data <- one_sample_test(mtcars, wt, test.value = 3, type = \"bayes\")  # creating a histogram plot ggplot(mtcars, aes(wt)) +   geom_histogram(alpha = 0.5) +   geom_vline(xintercept = mean(mtcars$wt), color = \"red\") +   labs(subtitle = parse(text = results_data$expression))"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"expressions-for-correlation-analysis","dir":"","previous_headings":"","what":"Expressions for correlation analysis","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Let’s look another example want run correlation analysis:","code":"set.seed(123)  # dataframe with results results_data <- corr_test(mtcars, mpg, wt, type = \"nonparametric\")  # create a scatter plot ggplot(mtcars, aes(mpg, wt)) +   geom_point() +   geom_smooth(method = \"lm\", formula = y ~ x) +   labs(     title = \"Spearman's rank correlation coefficient\",     subtitle = parse(text = results_data$expression)   )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"expressions-for-contingency-table-analysis","dir":"","previous_headings":"","what":"Expressions for contingency table analysis","title":"Tidy Dataframes and Expressions with Statistical Details","text":"categorical/nominal data - one-sample:  can also use function get expression return without display plots:","code":"set.seed(123)  # dataframe with results results_data <- contingency_table(   as.data.frame(table(mpg$class)),   Var1,   counts = Freq,   type = \"bayes\" )  # create a pie chart ggplot(as.data.frame(table(mpg$class)), aes(x = \"\", y = Freq, fill = factor(Var1))) +   geom_bar(width = 1, stat = \"identity\") +   theme(axis.line = element_blank()) +   # cleaning up the chart and adding results from one-sample proportion test   coord_polar(theta = \"y\", start = 0) +   labs(     fill = \"Class\",     x = NULL,     y = NULL,     title = \"Pie Chart of class (type of car)\",     caption = parse(text = results_data$expression)   ) set.seed(123)  # Pearson's chi-squared test of independence contingency_table(mtcars, am, vs)$expression[[1]] #> list(chi[\"Pearson\"]^2 * \"(\" * 1 * \")\" == \"0.91\", italic(p) ==  #>     \"0.34\", widehat(italic(\"V\"))[\"Cramer\"] == \"0.00\", CI[\"95%\"] ~  #>     \"[\" * \"0.00\", \"0.49\" * \"]\", italic(\"n\")[\"obs\"] == \"32\")"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"expressions-for-meta-analysis","dir":"","previous_headings":"","what":"Expressions for meta-analysis","title":"Tidy Dataframes and Expressions with Statistical Details","text":"","code":"set.seed(123) library(metaviz) library(metaplus)  # dataframe with results results_data <- meta_analysis(dplyr::rename(mozart, estimate = d, std.error = se))  # meta-analysis forest plot with results random-effects meta-analysis viz_forest(   x = mozart[, c(\"d\", \"se\")],   study_labels = mozart[, \"study_name\"],   xlab = \"Cohen's d\",   variant = \"thick\",   type = \"cumulative\" ) +   labs(     title = \"Meta-analysis of Pietschnig, Voracek, and Formann (2010) on the Mozart effect\",     subtitle = parse(text = results_data$expression)   ) +   theme(text = element_text(size = 12))"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"customizing-details-to-your-liking","dir":"","previous_headings":"","what":"Customizing details to your liking","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Sometimes may wish include many details subtitle. case, can extract expression copy-paste part wish include. example, statistic p-values included:","code":"set.seed(123)  # extracting detailed expression (res_expr <- oneway_anova(iris, Species, Sepal.Length, var.equal = TRUE)$expression[[1]]) #> list(italic(\"F\")[\"Fisher\"](2, 147) == \"119.26\", italic(p) ==  #>     \"1.67e-31\", widehat(omega[\"p\"]^2) == \"0.61\", CI[\"95%\"] ~  #>     \"[\" * \"0.53\", \"1.00\" * \"]\", italic(\"n\")[\"obs\"] == \"150\")  # adapting the details to your liking ggplot(iris, aes(x = Species, y = Sepal.Length)) +   geom_boxplot() +   labs(subtitle = ggplot2::expr(paste(     NULL, italic(\"F\"), \"(\", \"2\", \",\", \"147\", \") = \", \"119.26\", \", \",     italic(\"p\"), \" = \", \"1.67e-31\"   )))"},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"summary-of-tests-and-effect-sizes","dir":"","previous_headings":"","what":"Summary of tests and effect sizes","title":"Tidy Dataframes and Expressions with Statistical Details","text":"go-summary statistical test carried returned effect size function provided. useful one needs find information argument resolved underlying package one wishes browse source code. , example, want know one-way (-subjects) ANOVA, can run ?stats::oneway.test R console.","code":""},{"path":[]},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"between-subjects","dir":"","previous_headings":"oneway_anova","what":"between-subjects","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"within-subjects","dir":"","previous_headings":"oneway_anova","what":"within-subjects","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"between-subjects-1","dir":"","previous_headings":"two_sample_test","what":"between-subjects","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"within-subjects-1","dir":"","previous_headings":"two_sample_test","what":"within-subjects","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"one_sample_test","dir":"","previous_headings":"","what":"one_sample_test","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"corr_test","dir":"","previous_headings":"","what":"corr_test","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"two-way-table","dir":"","previous_headings":"contingency_table","what":"two-way table","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"one-way-table","dir":"","previous_headings":"contingency_table","what":"one-way table","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"meta_analysis","dir":"","previous_headings":"","what":"meta_analysis","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"usage-in-ggstatsplot","dir":"","previous_headings":"","what":"Usage in {ggstatsplot}","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Note functions initially written display results statistical tests ready-made ggplot2 plots implemented ggstatsplot. detailed documentation, see package website: https://indrajeetpatil.github.io/ggstatsplot/ example ggstatsplot plots look like expressions displayed subtitle-","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Tidy Dataframes and Expressions with Statistical Details","text":"hexsticker schematic illustration general workflow generously designed Sarah Otterstetter (Max Planck Institute Human Development, Berlin).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Tidy Dataframes and Expressions with Statistical Details","text":"Bug reports, suggestions, questions, () contributions welcome. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/add_expression_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Template for expressions with statistical details — add_expression_col","title":"Template for expressions with statistical details — add_expression_col","text":"Creates expression data frame containing statistical details. Ideally, data frame come run tidy_model_parameters() model object. function currently stable used outside package context.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/add_expression_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template for expressions with statistical details — add_expression_col","text":"","code":"add_expression_col(   data,   paired = FALSE,   statistic.text = NULL,   effsize.text = NULL,   prior.type = NULL,   n = NULL,   n.text = ifelse(paired, list(quote(italic(\"n\")[\"pairs\"])),     list(quote(italic(\"n\")[\"obs\"]))),   digits = 2L,   digits.df = 0L,   digits.df.error = digits.df,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/add_expression_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Template for expressions with statistical details — add_expression_col","text":"data data frame containing details statistical analysis contain following columns: statistic: numeric value statistic. df.error: numeric value parameter modeled (often degrees freedom test); irrelevant. degrees freedom. df: relevant statistic question two degrees freedom. p.value: two-sided p-value associated observed statistic. method: method describing test carried . effectsize: name effect size (present, method). estimate: estimated value effect size. conf.level: width confidence intervals. conf.low: lower bound effect size estimate. conf.high: upper bound effect size estimate. bf10: Bayes Factor value (bayesian = TRUE). paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. statistic.text character specifies relevant test statistic. example, tests t-statistic, statistic.text = \"t\". effsize.text character specifies relevant effect size. prior.type type prior. n integer specifying sample size used test. n.text character specifies design, determine n stands . defaults quote(italic(\"n\")[\"pairs\"]) paired = TRUE, quote(italic(\"n\")[\"obs\"]) paired = FALSE. wish customize , need provide object language type. digits, digits.df, digits.df.error Number decimal places display parameters (default: 0L). ... Currently ignored.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/add_expression_col.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Template for expressions with statistical details — add_expression_col","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/add_expression_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Template for expressions with statistical details — add_expression_col","text":"","code":"set.seed(123)  # creating a data frame with stats results stats_df <- cbind.data.frame(   statistic  = 5.494,   df         = 29.234,   p.value    = 0.00001,   estimate   = -1.980,   conf.level = 0.95,   conf.low   = -2.873,   conf.high  = -1.088,   method     = \"Student's t-test\" )  # expression for *t*-statistic with Cohen's *d* as effect size # note that the plotmath expressions need to be quoted add_expression_col(   data           = stats_df,   statistic.text = list(quote(italic(\"t\"))),   effsize.text   = list(quote(italic(\"d\"))),   n              = 32L,   n.text         = list(quote(italic(\"n\")[\"no.obs\"])),   digits         = 3L,   digits.df      = 3L ) #> # A tibble: 1 × 11 #>   statistic    df p.value effectsize       estimate conf.level conf.low #>       <dbl> <dbl>   <dbl> <chr>               <dbl>      <dbl>    <dbl> #> 1      5.49  29.2 0.00001 Student's t-test    -1.98       0.95    -2.87 #>   conf.high method           n.obs expression #>       <dbl> <chr>            <int> <list>     #> 1     -1.09 Student's t-test    32 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/bugs_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy version of the ","title":"Tidy version of the ","text":"Tidy version \"Bugs\" dataset.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/bugs_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy version of the ","text":"","code":"bugs_long"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/bugs_long.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tidy version of the ","text":"data frame 372 rows 6 variables subject. Dummy identity number participant. gender. Participant's gender (Female, Male). region. Region world participant . education. Level education. condition. Condition experiment participant gave rating (LDLF: low freighteningness low disgustingness; LFHD: low freighteningness high disgustingness; HFHD: high freighteningness low disgustingness; HFHD: high freighteningness high disgustingness). desire. desire kill arthropod indicated scale 0 10.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/bugs_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy version of the ","text":"data set, \"Bugs\", provides extent men women want kill arthropods vary freighteningness (low, high) disgustingness (low, high). participant rates attitudes towards anthropods. Subset data reported Ryan et al. (2013).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/bugs_long.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Tidy version of the ","text":"Ryan, R. S., Wilde, M., & Crist, S. (2013). Compared small, supervised lab experiment, large, unsupervised web-based experiment previously unknown effect benefits outweigh potential costs. Computers Human Behavior, 29(4), 1295-1301.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/bugs_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy version of the ","text":"","code":"dim(bugs_long) #> [1] 372   6 head(bugs_long) #> # A tibble: 6 × 6 #>   subject gender region        education condition desire #>     <int> <fct>  <fct>         <fct>     <chr>      <dbl> #> 1       1 Female North America some      LDLF           6 #> 2       2 Female North America advance   LDLF          10 #> 3       3 Female Europe        college   LDLF           5 #> 4       4 Female North America college   LDLF           6 #> 5       5 Female North America some      LDLF           3 #> 6       6 Female Europe        some      LDLF           2 dplyr::glimpse(bugs_long) #> Rows: 372 #> Columns: 6 #> $ subject   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1… #> $ gender    <fct> Female, Female, Female, Female, Female, Female, Female, Fema… #> $ region    <fct> North America, North America, Europe, North America, North A… #> $ education <fct> some, advance, college, college, some, some, some, high, hig… #> $ condition <chr> \"LDLF\", \"LDLF\", \"LDLF\", \"LDLF\", \"LDLF\", \"LDLF\", \"LDLF\", \"LDL… #> $ desire    <dbl> 6.0, 10.0, 5.0, 6.0, 3.0, 2.0, 10.0, 10.0, 9.5, 8.5, 0.0, 9.…"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/centrality_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frame and expression for distribution properties — centrality_description","title":"Data frame and expression for distribution properties — centrality_description","text":"Parametric, non-parametric, robust, Bayesian measures centrality.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/centrality_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data frame and expression for distribution properties — centrality_description","text":"","code":"centrality_description(   data,   x,   y,   type = \"parametric\",   conf.level = NULL,   tr = 0.2,   digits = 2L,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/centrality_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data frame and expression for distribution properties — centrality_description","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x grouping (independent) variable data. y response (outcome dependent) variable data. type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. conf.level Scalar 0 1 (default: 95% confidence/credible intervals, 0.95). NULL, confidence intervals computed. tr Trim level mean carrying robust tests. case error, try reducing value tr, default set 0.2. Lowering value might help. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). ... Currently ignored.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/centrality_description.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Data frame and expression for distribution properties — centrality_description","text":"function describes distribution y variable level grouping variable x set indices (e.g., measures centrality, dispersion, range, skewness, kurtosis, etc.). additionally returns expression containing specified centrality measure. function internally relies datawizard::describe_distribution() function.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/centrality_description.html","id":"centrality-measures","dir":"Reference","previous_headings":"","what":"Centrality measures","title":"Data frame and expression for distribution properties — centrality_description","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/centrality_description.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Data frame and expression for distribution properties — centrality_description","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/centrality_description.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data frame and expression for distribution properties — centrality_description","text":"","code":"# for reproducibility set.seed(123)  # ----------------------- parametric -----------------------  centrality_description(iris, Species, Sepal.Length, type = \"parametric\") #> # A tibble: 3 × 12 #>   Species    Sepal.Length std.dev   iqr   min   max skewness kurtosis n.obs #>   <fct>             <dbl>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int> #> 1 setosa             5.01   0.352 0.400   4.3   5.8    0.120  -0.253     50 #> 2 versicolor         5.94   0.516 0.7     4.9   7      0.105  -0.533     50 #> 3 virginica          6.59   0.636 0.750   4.9   7.9    0.118   0.0329    50 #>   missing.obs expression n.expression           #>         <int> <list>     <chr>                  #> 1           0 <language> \"setosa\\n(n = 50)\"     #> 2           0 <language> \"versicolor\\n(n = 50)\" #> 3           0 <language> \"virginica\\n(n = 50)\"   # ----------------------- non-parametric -------------------  centrality_description(mtcars, am, wt, type = \"nonparametric\") #> # A tibble: 2 × 12 #>      am    wt   mad   iqr   min   max skewness kurtosis n.obs missing.obs #>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int>       <int> #> 1     0  3.52 0.452 0.41   2.46  5.42    1.15     1.06     19           0 #> 2     1  2.32 0.682 0.942  1.51  3.57    0.269   -0.654    13           0 #>   expression n.expression  #>   <list>     <chr>         #> 1 <language> \"0\\n(n = 19)\" #> 2 <language> \"1\\n(n = 13)\"  # ----------------------- robust ---------------------------  centrality_description(ToothGrowth, supp, len, type = \"robust\") #> # A tibble: 2 × 12 #>   supp    len std.dev   iqr   min   max skewness kurtosis n.obs missing.obs #>   <fct> <dbl>   <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int>       <int> #> 1 OJ     21.7    6.61  10.9   8.2  30.9   -0.580   -0.831    30           0 #> 2 VC     16.6    8.27  12.5   4.2  33.9    0.306   -0.700    30           0 #>   expression n.expression   #>   <list>     <chr>          #> 1 <language> \"OJ\\n(n = 30)\" #> 2 <language> \"VC\\n(n = 30)\"  # ----------------------- Bayesian -------------------------  centrality_description(sleep, group, extra, type = \"bayes\") #> # A tibble: 2 × 11 #>   group  extra   iqr   min   max skewness kurtosis n.obs missing.obs expression #>   <fct>  <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> <int>       <int> <list>     #> 1 1     0.0579  2.8   -1.6   3.7    0.581   -0.630    10           0 <language> #> 2 2     0.973   3.82  -0.1   5.5    0.386   -1.42     10           0 <language> #>   n.expression  #>   <chr>         #> 1 \"1\\n(n = 10)\" #> 2 \"2\\n(n = 10)\""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Contingency table analyses — contingency_table","title":"Contingency table analyses — contingency_table","text":"Parametric Bayesian one-way two-way contingency table analyses.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contingency table analyses — contingency_table","text":"","code":"contingency_table(   data,   x,   y = NULL,   paired = FALSE,   type = \"parametric\",   counts = NULL,   ratio = NULL,   alternative = \"two.sided\",   digits = 2L,   conf.level = 0.95,   sampling.plan = \"indepMulti\",   fixed.margin = \"rows\",   prior.concentration = 1,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contingency table analyses — contingency_table","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x variable use rows contingency table. y variable use columns contingency table. Default NULL. NULL, one-sample proportion test (goodness fit test) run x variable. paired Logical indicating whether data came within-subjects repeated measures design study (Default: FALSE). type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. counts variable data containing counts, NULL row represents single observation. ratio vector proportions: expected proportions proportion test (sum 1). Default NULL, means null equal theoretical proportions across levels nominal variable. E.g., ratio = c(0.5, 0.5) two levels, ratio = c(0.25, 0.25, 0.25, 0.25) four levels, etc. alternative character string specifying alternative hypothesis; Controls type CI returned: \"two.sided\" (default, two-sided CI), \"greater\" \"less\" (one-sided CI). Partial matching allowed (e.g., \"g\", \"l\", \"two\"...). See section One-Sided CIs effectsize_CIs vignette. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). conf.level Scalar 0 1 (default: 95% confidence/credible intervals, 0.95). NULL, confidence intervals computed. sampling.plan Character describing sampling plan. Possible options: \"indepMulti\" (independent multinomial; default) \"poisson\" \"jointMulti\" (joint multinomial) \"hypergeom\" (hypergeometric). , see BayesFactor::contingencyTableBF(). fixed.margin independent multinomial sampling plan, margin fixed (\"rows\" \"cols\"). Defaults \"rows\". prior.concentration Specifies prior concentration parameter, set 1 default. indexes expected deviation null hypothesis alternative, corresponds Gunel Dickey's (1974) \"\" parameter. ... Additional arguments (currently ignored).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contingency table analyses — contingency_table","text":"returned tibble data frame can contain following columns (exact columns depend statistical test): statistic: numeric value statistic df: numeric value parameter modeled (often degrees freedom test) df.error df: relevant statistic question two degrees freedom (e.g. anova) p.value: two-sided p-value associated observed statistic method: name inferential statistical test estimate: estimated value effect size conf.low: lower bound effect size estimate conf.high: upper bound effect size estimate conf.level: width confidence interval conf.method: method used compute confidence interval conf.distribution: statistical distribution effect effectsize: name effect size n.obs: number observations expression: pre-formatted expression containing statistical details examples, see data frame output vignette.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":"contingency-table-analyses","dir":"Reference","previous_headings":"","what":"Contingency table analyses","title":"Contingency table analyses — contingency_table","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":"two-way-table","dir":"Reference","previous_headings":"","what":"two-way table","title":"Contingency table analyses — contingency_table","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":"one-way-table","dir":"Reference","previous_headings":"","what":"one-way table","title":"Contingency table analyses — contingency_table","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/contingency_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contingency table analyses — contingency_table","text":"","code":"if (identical(Sys.getenv(\"NOT_CRAN\"), \"true\")) {   #### -------------------- association test ------------------------ ####    # ------------------------ frequentist ---------------------------------    # unpaired    set.seed(123)   contingency_table(     data   = mtcars,     x      = am,     y      = vs,     paired = FALSE   )    # paired    paired_data <- tibble(     response_before = structure(c(1L, 2L, 1L, 2L), levels = c(\"no\", \"yes\"), class = \"factor\"),     response_after = structure(c(1L, 1L, 2L, 2L), levels = c(\"no\", \"yes\"), class = \"factor\"),     Freq = c(65L, 25L, 5L, 5L)   )    set.seed(123)   contingency_table(     data   = paired_data,     x      = response_before,     y      = response_after,     paired = TRUE,     counts = Freq   )    # ------------------------ Bayesian -------------------------------------    # unpaired    set.seed(123)   contingency_table(     data = mtcars,     x = am,     y = vs,     paired = FALSE,     type = \"bayes\"   )    # paired    set.seed(123)   contingency_table(     data = paired_data,     x = response_before,     y = response_after,     paired = TRUE,     counts = Freq,     type = \"bayes\"   )    #### -------------------- goodness-of-fit test -------------------- ####    # ------------------------ frequentist ---------------------------------    set.seed(123)   contingency_table(     data   = as.data.frame(HairEyeColor),     x      = Eye,     counts = Freq   )    # ------------------------ Bayesian -------------------------------------    set.seed(123)   contingency_table(     data   = as.data.frame(HairEyeColor),     x      = Eye,     counts = Freq,     ratio  = c(0.2, 0.2, 0.3, 0.3),     type   = \"bayes\"   ) } #> # A tibble: 1 × 4 #>      bf10 prior.scale method                                      expression #>     <dbl>       <dbl> <chr>                                       <list>     #> 1 4.17e55           1 Bayesian one-way contingency table analysis <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/corr_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Correlation analyses — corr_test","title":"Correlation analyses — corr_test","text":"Parametric, non-parametric, robust, Bayesian correlation test.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/corr_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correlation analyses — corr_test","text":"","code":"corr_test(   data,   x,   y,   type = \"parametric\",   digits = 2L,   conf.level = 0.95,   tr = 0.2,   bf.prior = 0.707,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/corr_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correlation analyses — corr_test","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x column data containing explanatory variable plotted x-axis. y column data containing response (outcome) variable plotted y-axis. type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). conf.level Scalar 0 1 (default: 95% confidence/credible intervals, 0.95). NULL, confidence intervals computed. tr Trim level mean carrying robust tests. case error, try reducing value tr, default set 0.2. Lowering value might help. bf.prior number 0.5 2 (default 0.707), prior width use calculating Bayes factors posterior estimates. addition numeric arguments, several named values also recognized: \"medium\", \"wide\", \"ultrawide\", corresponding r scale values 1/2, sqrt(2)/2, 1, respectively. case ANOVA, value corresponds scale fixed effects. ... Additional arguments (currently ignored).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/corr_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correlation analyses — corr_test","text":"returned tibble data frame can contain following columns (exact columns depend statistical test): statistic: numeric value statistic df: numeric value parameter modeled (often degrees freedom test) df.error df: relevant statistic question two degrees freedom (e.g. anova) p.value: two-sided p-value associated observed statistic method: name inferential statistical test estimate: estimated value effect size conf.low: lower bound effect size estimate conf.high: upper bound effect size estimate conf.level: width confidence interval conf.method: method used compute confidence interval conf.distribution: statistical distribution effect effectsize: name effect size n.obs: number observations expression: pre-formatted expression containing statistical details examples, see data frame output vignette.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/corr_test.html","id":"correlation-analyses","dir":"Reference","previous_headings":"","what":"Correlation analyses","title":"Correlation analyses — corr_test","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/corr_test.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Correlation analyses — corr_test","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/corr_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Correlation analyses — corr_test","text":"","code":"# for reproducibility set.seed(123)  # ----------------------- parametric -----------------------  corr_test(mtcars, wt, mpg, type = \"parametric\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 effectsize          estimate conf.level conf.low #>   <chr>      <chr>      <chr>                  <dbl>      <dbl>    <dbl> #> 1 wt         mpg        Pearson correlation   -0.868       0.95   -0.934 #>   conf.high statistic df.error  p.value method              n.obs conf.method #>       <dbl>     <dbl>    <int>    <dbl> <chr>               <int> <chr>       #> 1    -0.744     -9.56       30 1.29e-10 Pearson correlation    32 normal      #>   expression #>   <list>     #> 1 <language>  # ----------------------- non-parametric -------------------  corr_test(mtcars, wt, mpg, type = \"nonparametric\") #> # A tibble: 1 × 13 #>   parameter1 parameter2 effectsize           estimate conf.level conf.low #>   <chr>      <chr>      <chr>                   <dbl>      <dbl>    <dbl> #> 1 wt         mpg        Spearman correlation   -0.886       0.95   -0.945 #>   conf.high statistic  p.value method               n.obs conf.method expression #>       <dbl>     <dbl>    <dbl> <chr>                <int> <chr>       <list>     #> 1    -0.774    10292. 1.49e-11 Spearman correlation    32 normal      <language>  # ----------------------- robust ---------------------------  corr_test(mtcars, wt, mpg, type = \"robust\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 effectsize                     estimate conf.level #>   <chr>      <chr>      <chr>                             <dbl>      <dbl> #> 1 wt         mpg        Winsorized Pearson correlation   -0.864       0.95 #>   conf.low conf.high statistic df.error  p.value method                         #>      <dbl>     <dbl>     <dbl>    <int>    <dbl> <chr>                          #> 1   -0.932    -0.738     -9.41       30 1.84e-10 Winsorized Pearson correlation #>   n.obs conf.method expression #>   <int> <chr>       <list>     #> 1    32 normal      <language>  # ----------------------- Bayesian -------------------------  corr_test(mtcars, wt, mpg, type = \"bayes\") #> # A tibble: 1 × 17 #>   parameter1 parameter2 effectsize                   estimate conf.level #>   <chr>      <chr>      <chr>                           <dbl>      <dbl> #> 1 wt         mpg        Bayesian Pearson correlation   -0.843       0.95 #>   conf.low conf.high    pd rope.percentage prior.distribution prior.location #>      <dbl>     <dbl> <dbl>           <dbl> <chr>                       <dbl> #> 1   -0.934    -0.734     1               0 beta                         1.41 #>   prior.scale      bf10 method                       n.obs conf.method #>         <dbl>     <dbl> <chr>                        <int> <chr>       #> 1        1.41 56223033. Bayesian Pearson correlation    32 HDI         #>   expression #>   <list>     #> 1 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/extract_stats_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Switch the type of statistics. — extract_stats_type","title":"Switch the type of statistics. — extract_stats_type","text":"Relevant mostly {ggstatsplot} {statsExpressions} packages, different statistical approaches supported via argument: parametric, non-parametric, robust, Bayesian. switch function converts strings entered users common pattern convenience.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/extract_stats_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Switch the type of statistics. — extract_stats_type","text":"","code":"extract_stats_type(type)  stats_type_switch(type)"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/extract_stats_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Switch the type of statistics. — extract_stats_type","text":"type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/extract_stats_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Switch the type of statistics. — extract_stats_type","text":"","code":"extract_stats_type(\"p\") #> [1] \"parametric\" extract_stats_type(\"bf\") #> [1] \"bayes\""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/iris_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Edgar Anderson's Iris Data in long format. — iris_long","title":"Edgar Anderson's Iris Data in long format. — iris_long","text":"Edgar Anderson's Iris Data long format.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/iris_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edgar Anderson's Iris Data in long format. — iris_long","text":"","code":"iris_long"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/iris_long.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Edgar Anderson's Iris Data in long format. — iris_long","text":"data frame 600 rows 5 variables id. Dummy identity number flower (150 flowers total). Species.\tspecies Iris setosa, versicolor, virginica. condition. Factor giving detailed description attribute (Four levels: \"Petal.Length\", \"Petal.Width\",  \"Sepal.Length\", \"Sepal.Width\"). attribute.\tattribute measured (\"Sepal\" \"Pepal\"). measure.\taspect attribute measured (\"Length\" \"Width\"). value.\tValue measurement.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/iris_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Edgar Anderson's Iris Data in long format. — iris_long","text":"famous (Fisher's Anderson's) iris data set gives measurements centimeters variables sepal length width petal length width, respectively, 50 flowers 3 species iris. species Iris setosa, versicolor, virginica. modified dataset {datasets} package.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/iris_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edgar Anderson's Iris Data in long format. — iris_long","text":"","code":"dim(iris_long) #> [1] 600   6 head(iris_long) #> # A tibble: 6 × 6 #>      id Species condition    attribute measure value #>   <int> <fct>   <fct>        <fct>     <fct>   <dbl> #> 1     1 setosa  Sepal.Length Sepal     Length    5.1 #> 2     2 setosa  Sepal.Length Sepal     Length    4.9 #> 3     3 setosa  Sepal.Length Sepal     Length    4.7 #> 4     4 setosa  Sepal.Length Sepal     Length    4.6 #> 5     5 setosa  Sepal.Length Sepal     Length    5   #> 6     6 setosa  Sepal.Length Sepal     Length    5.4 dplyr::glimpse(iris_long) #> Rows: 600 #> Columns: 6 #> $ id        <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1… #> $ Species   <fct> setosa, setosa, setosa, setosa, setosa, setosa, setosa, seto… #> $ condition <fct> Sepal.Length, Sepal.Length, Sepal.Length, Sepal.Length, Sepa… #> $ attribute <fct> Sepal, Sepal, Sepal, Sepal, Sepal, Sepal, Sepal, Sepal, Sepa… #> $ measure   <fct> Length, Length, Length, Length, Length, Length, Length, Leng… #> $ value     <dbl> 5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.8, …"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/long_to_wide_converter.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert long/tidy data frame to wide format — long_to_wide_converter","title":"Convert long/tidy data frame to wide format — long_to_wide_converter","text":"conversion helpful mostly repeated measures design, removing NAs participant can bit tedious.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/long_to_wide_converter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert long/tidy data frame to wide format — long_to_wide_converter","text":"","code":"long_to_wide_converter(   data,   x,   y,   subject.id = NULL,   paired = TRUE,   spread = TRUE,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/long_to_wide_converter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert long/tidy data frame to wide format — long_to_wide_converter","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x grouping (independent) variable data. case repeated measures within-subjects design, subject.id argument available explicitly specified, function assumes data already sorted id user creates internal identifier. data sorted, results can inaccurate two levels x NAs present. data expected sorted user subject-1, subject-2, ..., pattern. y response (outcome dependent) variable data. subject.id Relevant case repeated measures within-subjects design (paired = TRUE, .e.), specifies subject repeated measures identifier. Important: Note argument NULL (default), function assumes data already sorted id user creates internal identifier. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. spread Logical decides whether data frame needs converted long/tidy wide (default: TRUE). ... Currently ignored.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/long_to_wide_converter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert long/tidy data frame to wide format — long_to_wide_converter","text":"data frame NAs removed respecting --within-subjects nature dataset.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/long_to_wide_converter.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Convert long/tidy data frame to wide format — long_to_wide_converter","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/long_to_wide_converter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert long/tidy data frame to wide format — long_to_wide_converter","text":"","code":"# for reproducibility library(statsExpressions) set.seed(123)  # repeated measures design long_to_wide_converter(   bugs_long,   condition,   desire,   subject.id = subject,   paired = TRUE ) #> # A tibble: 88 × 5 #>    .rowid  HDHF  HDLF  LDHF  LDLF #>     <int> <dbl> <dbl> <dbl> <dbl> #>  1      1  10     9     6     6   #>  2      3  10    10    10     5   #>  3      4   9     6     9     6   #>  4      5   8.5   5.5   6.5   3   #>  5      6   3     7.5   0.5   2   #>  6      7  10    10    10    10   #>  7      8  10     9    10    10   #>  8      9  10     6     9.5   9.5 #>  9     11   0     0     2.5   0   #> 10     12  10     8.5   7.5   9.5 #> # ℹ 78 more rows  # independent measures design long_to_wide_converter(mtcars, cyl, wt, paired = FALSE) #> # A tibble: 32 × 4 #>    .rowid   `4`   `6`   `8` #>     <int> <dbl> <dbl> <dbl> #>  1      1  2.32    NA    NA #>  2      2  3.19    NA    NA #>  3      3  3.15    NA    NA #>  4      4  2.2     NA    NA #>  5      5  1.62    NA    NA #>  6      6  1.84    NA    NA #>  7      7  2.46    NA    NA #>  8      8  1.94    NA    NA #>  9      9  2.14    NA    NA #> 10     10  1.51    NA    NA #> # ℹ 22 more rows"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Random-effects meta-analysis — meta_analysis","title":"Random-effects meta-analysis — meta_analysis","text":"Parametric, non-parametric, robust, Bayesian random-effects meta-analysis.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random-effects meta-analysis — meta_analysis","text":"","code":"meta_analysis(   data,   type = \"parametric\",   random = \"mixture\",   digits = 2L,   conf.level = 0.95,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random-effects meta-analysis — meta_analysis","text":"data data frame. must contain columns named estimate (effect sizes outcomes)  std.error (corresponding standard errors). two columns used: yi  sei arguments metafor::rma() (parametric test) yi  sei arguments metaplus::metaplus() (robust test) y SE arguments metaBMA::meta_random() (Bayesian test) type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. random type random effects distribution. One \"normal\", \"t-dist\", \"mixture\", standard normal, \\(t\\)-distribution mixture normals respectively. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). conf.level Scalar 0 1 (default: 95% confidence/credible intervals, 0.95). NULL, confidence intervals computed. ... Additional arguments passed respective meta-analysis function.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random-effects meta-analysis — meta_analysis","text":"returned tibble data frame can contain following columns (exact columns depend statistical test): statistic: numeric value statistic df: numeric value parameter modeled (often degrees freedom test) df.error df: relevant statistic question two degrees freedom (e.g. anova) p.value: two-sided p-value associated observed statistic method: name inferential statistical test estimate: estimated value effect size conf.low: lower bound effect size estimate conf.high: upper bound effect size estimate conf.level: width confidence interval conf.method: method used compute confidence interval conf.distribution: statistical distribution effect effectsize: name effect size n.obs: number observations expression: pre-formatted expression containing statistical details examples, see data frame output vignette.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Random-effects meta-analysis — meta_analysis","text":"Important: function assumes already downloaded needed package ({metafor}, {metaplus}, {metaBMA}) meta-analysis. available, asked install .","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":"random-effects-meta-analysis","dir":"Reference","previous_headings":"","what":"Random-effects meta-analysis","title":"Random-effects meta-analysis — meta_analysis","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Random-effects meta-analysis — meta_analysis","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/meta_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random-effects meta-analysis — meta_analysis","text":"","code":"# setup set.seed(123) library(statsExpressions)  # let's use `mag` dataset from `{metaplus}` data(mag, package = \"metaplus\") dat <- dplyr::rename(mag, estimate = yi, std.error = sei)  # ----------------------- parametric -------------------------------------  meta_analysis(dat) #> # A tibble: 1 × 14 #>   term    effectsize                     estimate std.error conf.level conf.low #>   <chr>   <chr>                             <dbl>     <dbl>      <dbl>    <dbl> #> 1 Overall meta-analytic summary estimate   -0.767     0.212       0.95    -1.18 #>   conf.high statistic  p.value weight method                        conf.method #>       <dbl>     <dbl>    <dbl>  <dbl> <chr>                         <chr>       #> 1    -0.351     -3.62 0.000295     NA Meta-analysis using 'metafor' Wald        #>   n.obs expression #>   <int> <list>     #> 1    16 <language>  # ----------------------- robust ----------------------------------  meta_analysis(dat, type = \"random\", random = \"normal\") #> # A tibble: 1 × 14 #>   term    effectsize                     estimate std.error conf.low conf.high #>   <chr>   <chr>                             <dbl>     <dbl>    <dbl>     <dbl> #> 1 Overall meta-analytic summary estimate   -0.746     0.234    -1.26    -0.343 #>   statistic  p.value weight conf.level method                                #>       <dbl>    <dbl>  <dbl>      <dbl> <chr>                                 #> 1     -3.20 0.000501     NA       0.95 Robust meta-analysis using 'metaplus' #>   conf.method n.obs expression #>   <chr>       <int> <list>     #> 1 Wald           16 <language>  # ----------------------- Bayesian ----------------------------------  meta_analysis(dat, type = \"bayes\") #> # A tibble: 2 × 20 #>   term    effectsize                       estimate std.error conf.level #>   <chr>   <chr>                               <dbl>     <dbl>      <dbl> #> 1 Overall meta-analytic posterior estimate   -0.643     0.220       0.95 #> 2 tau     meta-analytic posterior estimate    0.484     0.182       0.95 #>   conf.low conf.high weight  bf10  rhat   ess component prior.distribution #>      <dbl>     <dbl>  <dbl> <dbl> <dbl> <dbl> <chr>     <chr>              #> 1   -1.11     -0.242     NA  53.0     1 3507  meta      Student's t        #> 2    0.205     0.909     NA  53.0     1 3460. meta      Inverse gamma      #>   prior.location prior.scale method                                 conf.method #>            <dbl>       <dbl> <chr>                                  <chr>       #> 1              0       0.707 Bayesian meta-analysis using 'metaBMA' ETI         #> 2              1       0.15  Bayesian meta-analysis using 'metaBMA' ETI         #>   log_e_bf10 n.obs expression #>        <dbl> <int> <list>     #> 1       3.97    16 <language> #> 2       3.97    16 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/movies_long.html","id":null,"dir":"Reference","previous_headings":"","what":"Movie information and user ratings from IMDB. — movies_long","title":"Movie information and user ratings from IMDB. — movies_long","text":"Movie information user ratings IMDB.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/movies_long.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Movie information and user ratings from IMDB. — movies_long","text":"","code":"movies_long"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/movies_long.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Movie information and user ratings from IMDB. — movies_long","text":"data frame 1,579 rows 8 variables title.  Title movie. year.  Year release. budget.  Total budget (known) US dollars length.  Length minutes. rating.  Average IMDB user rating. votes.  Number IMDB users rated movie. mpaa.  MPAA rating. genre. Different genres movies (action, animation, comedy, drama, documentary, romance, short).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/movies_long.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Movie information and user ratings from IMDB. — movies_long","text":"https://CRAN.R-project.org/package=ggplot2movies","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/movies_long.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Movie information and user ratings from IMDB. — movies_long","text":"Modified dataset {ggplot2movies} package.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/movies_long.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Movie information and user ratings from IMDB. — movies_long","text":"","code":"dim(movies_long) #> [1] 1579    8 head(movies_long) #> # A tibble: 6 × 8 #>   title                             year length budget rating  votes mpaa  genre #>   <chr>                            <int>  <int>  <dbl>  <dbl>  <int> <fct> <fct> #> 1 Shawshank Redemption, The         1994    142     25    9.1 149494 R     Drama #> 2 Lord of the Rings: The Return o…  2003    251     94    9   103631 PG-13 Acti… #> 3 Lord of the Rings: The Fellowsh…  2001    208     93    8.8 157608 PG-13 Acti… #> 4 Lord of the Rings: The Two Towe…  2002    223     94    8.8 114797 PG-13 Acti… #> 5 Pulp Fiction                      1994    168      8    8.8 132745 R     Drama #> 6 Schindler's List                  1993    195     25    8.8  97667 R     Drama dplyr::glimpse(movies_long) #> Rows: 1,579 #> Columns: 8 #> $ title  <chr> \"Shawshank Redemption, The\", \"Lord of the Rings: The Return of … #> $ year   <int> 1994, 2003, 2001, 2002, 1994, 1993, 1977, 1980, 1968, 2002, 196… #> $ length <int> 142, 251, 208, 223, 168, 195, 125, 129, 158, 135, 93, 113, 108,… #> $ budget <dbl> 25.0, 94.0, 93.0, 94.0, 8.0, 25.0, 11.0, 18.0, 5.0, 3.3, 1.8, 5… #> $ rating <dbl> 9.1, 9.0, 8.8, 8.8, 8.8, 8.8, 8.8, 8.8, 8.7, 8.7, 8.7, 8.7, 8.6… #> $ votes  <int> 149494, 103631, 157608, 114797, 132745, 97667, 134640, 103706, … #> $ mpaa   <fct> R, PG-13, PG-13, PG-13, R, R, PG, PG, PG-13, R, PG, R, R, R, R,… #> $ genre  <fct> Drama, Action, Action, Action, Drama, Drama, Action, Action, Dr…"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/one_sample_test.html","id":null,"dir":"Reference","previous_headings":"","what":"One-sample tests — one_sample_test","title":"One-sample tests — one_sample_test","text":"Parametric, non-parametric, robust, Bayesian one-sample tests.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/one_sample_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-sample tests — one_sample_test","text":"","code":"one_sample_test(   data,   x,   type = \"parametric\",   test.value = 0,   alternative = \"two.sided\",   digits = 2L,   conf.level = 0.95,   tr = 0.2,   bf.prior = 0.707,   effsize.type = \"g\",   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/one_sample_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-sample tests — one_sample_test","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x numeric variable data frame data. type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. test.value number indicating true value mean (Default: 0). alternative character string specifying alternative     hypothesis, must one \"two.sided\" (default),     \"greater\" \"less\".  can specify just initial     letter. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). conf.level Scalar 0 1 (default: 95% confidence/credible intervals, 0.95). NULL, confidence intervals computed. tr Trim level mean carrying robust tests. case error, try reducing value tr, default set 0.2. Lowering value might help. bf.prior number 0.5 2 (default 0.707), prior width use calculating Bayes factors posterior estimates. addition numeric arguments, several named values also recognized: \"medium\", \"wide\", \"ultrawide\", corresponding r scale values 1/2, sqrt(2)/2, 1, respectively. case ANOVA, value corresponds scale fixed effects. effsize.type Type effect size needed parametric tests. argument can \"d\" (Cohen's d) \"g\" (Hedge's g). ... Currently ignored.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/one_sample_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-sample tests — one_sample_test","text":"returned tibble data frame can contain following columns (exact columns depend statistical test): statistic: numeric value statistic df: numeric value parameter modeled (often degrees freedom test) df.error df: relevant statistic question two degrees freedom (e.g. anova) p.value: two-sided p-value associated observed statistic method: name inferential statistical test estimate: estimated value effect size conf.low: lower bound effect size estimate conf.high: upper bound effect size estimate conf.level: width confidence interval conf.method: method used compute confidence interval conf.distribution: statistical distribution effect effectsize: name effect size n.obs: number observations expression: pre-formatted expression containing statistical details examples, see data frame output vignette.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/one_sample_test.html","id":"one-sample-tests","dir":"Reference","previous_headings":"","what":"One-sample tests","title":"One-sample tests — one_sample_test","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/one_sample_test.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"One-sample tests — one_sample_test","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/one_sample_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-sample tests — one_sample_test","text":"","code":"# for reproducibility set.seed(123)  # ----------------------- parametric -----------------------  one_sample_test(mtcars, wt, test.value = 3) #> # A tibble: 1 × 15 #>      mu statistic df.error p.value method            alternative effectsize #>   <dbl>     <dbl>    <dbl>   <dbl> <chr>             <chr>       <chr>      #> 1     3      1.26       31   0.218 One Sample t-test two.sided   Hedges' g  #>   estimate conf.level conf.low conf.high conf.method conf.distribution n.obs #>      <dbl>      <dbl>    <dbl>     <dbl> <chr>       <chr>             <int> #> 1    0.217       0.95   -0.127     0.557 ncp         t                    32 #>   expression #>   <list>     #> 1 <language>  # ----------------------- non-parametric -------------------  one_sample_test(mtcars, wt, test.value = 3, type = \"nonparametric\") #> # A tibble: 1 × 12 #>   statistic p.value method                    alternative effectsize        #>       <dbl>   <dbl> <chr>                     <chr>       <chr>             #> 1       319   0.308 Wilcoxon signed rank test two.sided   r (rank biserial) #>   estimate conf.level conf.low conf.high conf.method n.obs expression #>      <dbl>      <dbl>    <dbl>     <dbl> <chr>       <int> <list>     #> 1    0.208       0.95   -0.184     0.543 normal         32 <language>  # ----------------------- robust ---------------------------  one_sample_test(mtcars, wt, test.value = 3, type = \"robust\") #> # A tibble: 1 × 10 #>   statistic p.value n.obs method                                 effectsize   #>       <dbl>   <dbl> <int> <chr>                                  <chr>        #> 1      1.18   0.275    32 Bootstrap-t method for one-sample test Trimmed mean #>   estimate conf.level conf.low conf.high expression #>      <dbl>      <dbl>    <dbl>     <dbl> <list>     #> 1     3.20       0.95     2.85      3.54 <language>  # ----------------------- Bayesian -------------------------  one_sample_test(mtcars, wt, test.value = 3, type = \"bayes\") #> # A tibble: 1 × 16 #>   term       effectsize      estimate conf.level conf.low conf.high    pd #>   <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl> #> 1 Difference Bayesian t-test    0.195       0.95   -0.165     0.555  0.86 #>   prior.distribution prior.location prior.scale  bf10 method          #>   <chr>                       <dbl>       <dbl> <dbl> <chr>           #> 1 cauchy                          0       0.707 0.387 Bayesian t-test #>   conf.method log_e_bf10 n.obs expression #>   <chr>            <dbl> <int> <list>     #> 1 ETI             -0.950    32 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":null,"dir":"Reference","previous_headings":"","what":"One-way analysis of variance (ANOVA) — oneway_anova","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"Parametric, non-parametric, robust, Bayesian one-way ANOVA.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"","code":"oneway_anova(   data,   x,   y,   subject.id = NULL,   type = \"parametric\",   paired = FALSE,   digits = 2L,   conf.level = 0.95,   effsize.type = \"omega\",   var.equal = FALSE,   bf.prior = 0.707,   tr = 0.2,   nboot = 100L,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x grouping (independent) variable data. case repeated measures within-subjects design, subject.id argument available explicitly specified, function assumes data already sorted id user creates internal identifier. data sorted, results can inaccurate two levels x NAs present. data expected sorted user subject-1, subject-2, ..., pattern. y response (outcome dependent) variable data. subject.id Relevant case repeated measures within-subjects design (paired = TRUE, .e.), specifies subject repeated measures identifier. Important: Note argument NULL (default), function assumes data already sorted id user creates internal identifier. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). conf.level Scalar 0 1 (default: 95% confidence/credible intervals, 0.95). NULL, confidence intervals computed. effsize.type Type effect size needed parametric tests. argument can \"eta\" (partial eta-squared) \"omega\" (partial omega-squared). var.equal logical variable indicating whether treat     two variances equal. TRUE pooled     variance used estimate variance otherwise Welch     (Satterthwaite) approximation degrees freedom used. bf.prior number 0.5 2 (default 0.707), prior width use calculating Bayes factors posterior estimates. addition numeric arguments, several named values also recognized: \"medium\", \"wide\", \"ultrawide\", corresponding r scale values 1/2, sqrt(2)/2, 1, respectively. case ANOVA, value corresponds scale fixed effects. tr Trim level mean carrying robust tests. case error, try reducing value tr, default set 0.2. Lowering value might help. nboot Number bootstrap samples computing confidence interval effect size (Default: 100L). ... Additional arguments (currently ignored).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"returned tibble data frame can contain following columns (exact columns depend statistical test): statistic: numeric value statistic df: numeric value parameter modeled (often degrees freedom test) df.error df: relevant statistic question two degrees freedom (e.g. anova) p.value: two-sided p-value associated observed statistic method: name inferential statistical test estimate: estimated value effect size conf.low: lower bound effect size estimate conf.high: upper bound effect size estimate conf.level: width confidence interval conf.method: method used compute confidence interval conf.distribution: statistical distribution effect effectsize: name effect size n.obs: number observations expression: pre-formatted expression containing statistical details examples, see data frame output vignette.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"one-way-anova","dir":"Reference","previous_headings":"","what":"One-way ANOVA","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"between-subjects","dir":"Reference","previous_headings":"","what":"between-subjects","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"within-subjects","dir":"Reference","previous_headings":"","what":"within-subjects","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/oneway_anova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"One-way analysis of variance (ANOVA) — oneway_anova","text":"","code":"# for reproducibility set.seed(123) library(statsExpressions)  # ----------------------- parametric -------------------------------------  # between-subjects oneway_anova(   data = mtcars,   x    = cyl,   y    = wt ) #> # A tibble: 1 × 14 #>   statistic    df df.error   p.value #>       <dbl> <dbl>    <dbl>     <dbl> #> 1      20.2     2     19.0 0.0000196 #>   method                                                   effectsize estimate #>   <chr>                                                    <chr>         <dbl> #> 1 One-way analysis of means (not assuming equal variances) Omega2        0.637 #>   conf.level conf.low conf.high conf.method conf.distribution n.obs expression #>        <dbl>    <dbl>     <dbl> <chr>       <chr>             <int> <list>     #> 1       0.95    0.370         1 ncp         F                    32 <language>  # within-subjects design oneway_anova(   data       = iris_long,   x          = condition,   y          = value,   subject.id = id,   paired     = TRUE ) #> # A tibble: 1 × 18 #>   term      sumsq sum.squares.error    df df.error meansq statistic  p.value #>   <chr>     <dbl>             <dbl> <dbl>    <dbl>  <dbl>     <dbl>    <dbl> #> 1 condition 1656.              318.  1.15     171.   1.86      776. 1.32e-69 #>   method                                              effectsize       estimate #>   <chr>                                               <chr>               <dbl> #> 1 ANOVA estimation for factorial designs using 'afex' Omega2 (partial)    0.707 #>   conf.level conf.low conf.high conf.method conf.distribution n.obs expression #>        <dbl>    <dbl>     <dbl> <chr>       <chr>             <int> <list>     #> 1       0.95    0.673         1 ncp         F                   150 <language>  # ----------------------- non-parametric ----------------------------------  # between-subjects oneway_anova(   data = mtcars,   x    = cyl,   y    = wt,   type = \"np\" ) #> # A tibble: 1 × 15 #>   parameter1 parameter2 statistic df.error   p.value #>   <chr>      <chr>          <dbl>    <int>     <dbl> #> 1 wt         cyl             22.8        2 0.0000112 #>   method                       effectsize      estimate conf.level conf.low #>   <chr>                        <chr>              <dbl>      <dbl>    <dbl> #> 1 Kruskal-Wallis rank sum test Epsilon2 (rank)    0.736       0.95    0.624 #>   conf.high conf.method          conf.iterations n.obs expression #>       <dbl> <chr>                          <int> <int> <list>     #> 1         1 percentile bootstrap             100    32 <language>  # within-subjects design oneway_anova(   data       = iris_long,   x          = condition,   y          = value,   subject.id = id,   paired     = TRUE,   type       = \"np\" ) #> # A tibble: 1 × 15 #>   parameter1 parameter2 statistic df.error  p.value method                 #>   <chr>      <chr>          <dbl>    <dbl>    <dbl> <chr>                  #> 1 value      condition        410        3 1.51e-88 Friedman rank sum test #>   effectsize  estimate conf.level conf.low conf.high conf.method          #>   <chr>          <dbl>      <dbl>    <dbl>     <dbl> <chr>                #> 1 Kendall's W    0.911       0.95    0.904         1 percentile bootstrap #>   conf.iterations n.obs expression #>             <int> <int> <list>     #> 1             100   150 <language>  # ----------------------- robust -------------------------------------  # between-subjects oneway_anova(   data = mtcars,   x    = cyl,   y    = wt,   type = \"r\" ) #> # A tibble: 1 × 12 #>   statistic    df df.error p.value #>       <dbl> <dbl>    <dbl>   <dbl> #> 1      12.7     2     12.2 0.00102 #>   method                                            #>   <chr>                                             #> 1 A heteroscedastic one-way ANOVA for trimmed means #>   effectsize                         estimate conf.level conf.low conf.high #>   <chr>                                 <dbl>      <dbl>    <dbl>     <dbl> #> 1 Explanatory measure of effect size     1.02       0.95    0.828      1.35 #>   n.obs expression #>   <int> <list>     #> 1    32 <language>  # within-subjects design oneway_anova(   data       = iris_long,   x          = condition,   y          = value,   subject.id = id,   paired     = TRUE,   type       = \"r\" ) #> # A tibble: 1 × 12 #>   statistic    df df.error p.value #>       <dbl> <dbl>    <dbl>   <dbl> #> 1      368.  1.09     97.1       0 #>   method                                                              #>   <chr>                                                               #> 1 A heteroscedastic one-way repeated measures ANOVA for trimmed means #>   effectsize                                                      estimate #>   <chr>                                                              <dbl> #> 1 Algina-Keselman-Penfield robust standardized difference average   -0.349 #>   conf.level conf.low conf.high n.obs expression #>        <dbl>    <dbl>     <dbl> <int> <list>     #> 1       0.95   -0.755     0.123   150 <language>  # ----------------------- Bayesian -------------------------------------  # between-subjects oneway_anova(   data = mtcars,   x    = cyl,   y    = wt,   type = \"bayes\" ) #> # A tibble: 6 × 17 #>   term     pd prior.distribution prior.location prior.scale   bf10 #>   <chr> <dbl> <chr>                       <dbl>       <dbl>  <dbl> #> 1 mu    1     cauchy                          0       0.707 20968. #> 2 cyl-4 1     cauchy                          0       0.707 20968. #> 3 cyl-6 0.552 cauchy                          0       0.707 20968. #> 4 cyl-8 1     cauchy                          0       0.707 20968. #> 5 sig2  1     cauchy                          0       0.707 20968. #> 6 g_cyl 1     cauchy                          0       0.707 20968. #>   method                          log_e_bf10 effectsize         estimate std.dev #>   <chr>                                <dbl> <chr>                 <dbl>   <dbl> #> 1 Bayes factors for linear models       9.95 Bayesian R-squared    0.577  0.0869 #> 2 Bayes factors for linear models       9.95 Bayesian R-squared    0.577  0.0869 #> 3 Bayes factors for linear models       9.95 Bayesian R-squared    0.577  0.0869 #> 4 Bayes factors for linear models       9.95 Bayesian R-squared    0.577  0.0869 #> 5 Bayes factors for linear models       9.95 Bayesian R-squared    0.577  0.0869 #> 6 Bayes factors for linear models       9.95 Bayesian R-squared    0.577  0.0869 #>   conf.level conf.low conf.high conf.method n.obs expression #>        <dbl>    <dbl>     <dbl> <chr>       <int> <list>     #> 1       0.95    0.379     0.707 HDI            32 <language> #> 2       0.95    0.379     0.707 HDI            32 <language> #> 3       0.95    0.379     0.707 HDI            32 <language> #> 4       0.95    0.379     0.707 HDI            32 <language> #> 5       0.95    0.379     0.707 HDI            32 <language> #> 6       0.95    0.379     0.707 HDI            32 <language>  # within-subjects design oneway_anova(   data       = iris_long,   x          = condition,   y          = value,   subject.id = id,   paired     = TRUE,   type       = \"bayes\" ) #> Multiple `BFBayesFactor` models detected - posteriors are extracted from #>   the first numerator model. #>   See help(\"get_parameters\", package = \"insight\"). #> # A tibble: 8 × 19 #>   term                      pd prior.distribution prior.location prior.scale #>   <chr>                  <dbl> <chr>                       <dbl>       <dbl> #> 1 mu                         1 cauchy                          0       0.707 #> 2 condition-Petal.Length     1 cauchy                          0       0.707 #> 3 condition-Petal.Width      1 cauchy                          0       0.707 #> 4 condition-Sepal.Length     1 cauchy                          0       0.707 #> 5 condition-Sepal.Width      1 cauchy                          0       0.707 #> 6 sig2                       1 cauchy                          0       1     #> 7 g_condition                1 cauchy                          0       1     #> 8 g_.rowid                   1 cauchy                          0       1     #>   effect     bf10 method                          log_e_bf10 effectsize         #>   <chr>     <dbl> <chr>                                <dbl> <chr>              #> 1 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #> 2 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #> 3 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #> 4 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #> 5 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #> 6 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #> 7 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #> 8 fixed  1.55e182 Bayes factors for linear models       420. Bayesian R-squared #>   estimate std.dev conf.level conf.low conf.high conf.method component   n.obs #>      <dbl>   <dbl>      <dbl>    <dbl>     <dbl> <chr>       <chr>       <int> #> 1    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #> 2    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #> 3    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #> 4    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #> 5    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #> 6    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #> 7    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #> 8    0.818 0.00846       0.95    0.801     0.834 HDI         conditional   150 #>   expression #>   <list>     #> 1 <language> #> 2 <language> #> 3 <language> #> 4 <language> #> 5 <language> #> 6 <language> #> 7 <language> #> 8 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/p_adjust_text.html","id":null,"dir":"Reference","previous_headings":"","what":"p-value adjustment method text — p_adjust_text","title":"p-value adjustment method text — p_adjust_text","text":"Preparing text describe p-value adjustment method used","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/p_adjust_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"p-value adjustment method text — p_adjust_text","text":"","code":"p_adjust_text(p.adjust.method)"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/p_adjust_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"p-value adjustment method text — p_adjust_text","text":"p.adjust.method Adjustment method p-values multiple comparisons. Possible methods : \"holm\" (default), \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\".","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/p_adjust_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"p-value adjustment method text — p_adjust_text","text":"Standardized text description method used.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/p_adjust_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"p-value adjustment method text — p_adjust_text","text":"","code":"p_adjust_text(\"none\") #> [1] \"None\" p_adjust_text(\"BY\") #> [1] \"BY\""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple pairwise comparison for one-way design — pairwise_comparisons","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"Calculate parametric, non-parametric, robust, Bayes Factor pairwise comparisons group levels corrections multiple testing.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"","code":"pairwise_comparisons(   data,   x,   y,   subject.id = NULL,   type = \"parametric\",   paired = FALSE,   var.equal = FALSE,   tr = 0.2,   bf.prior = 0.707,   p.adjust.method = \"holm\",   digits = 2L,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x grouping (independent) variable data. case repeated measures within-subjects design, subject.id argument available explicitly specified, function assumes data already sorted id user creates internal identifier. data sorted, results can inaccurate two levels x NAs present. data expected sorted user subject-1, subject-2, ..., pattern. y response (outcome dependent) variable data. subject.id Relevant case repeated measures within-subjects design (paired = TRUE, .e.), specifies subject repeated measures identifier. Important: Note argument NULL (default), function assumes data already sorted id user creates internal identifier. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. var.equal logical variable indicating whether treat     two variances equal. TRUE pooled     variance used estimate variance otherwise Welch     (Satterthwaite) approximation degrees freedom used. tr Trim level mean carrying robust tests. case error, try reducing value tr, default set 0.2. Lowering value might help. bf.prior number 0.5 2 (default 0.707), prior width use calculating Bayes factors posterior estimates. addition numeric arguments, several named values also recognized: \"medium\", \"wide\", \"ultrawide\", corresponding r scale values 1/2, sqrt(2)/2, 1, respectively. case ANOVA, value corresponds scale fixed effects. p.adjust.method Adjustment method p-values multiple comparisons. Possible methods : \"holm\" (default), \"hochberg\", \"hommel\", \"bonferroni\", \"BH\", \"\", \"fdr\", \"none\". digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). ... Additional arguments passed methods.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"returned tibble data frame can contain following columns (exact columns depend statistical test): statistic: numeric value statistic df: numeric value parameter modeled (often degrees freedom test) df.error df: relevant statistic question two degrees freedom (e.g. anova) p.value: two-sided p-value associated observed statistic method: name inferential statistical test estimate: estimated value effect size conf.low: lower bound effect size estimate conf.high: upper bound effect size estimate conf.level: width confidence interval conf.method: method used compute confidence interval conf.distribution: statistical distribution effect effectsize: name effect size n.obs: number observations expression: pre-formatted expression containing statistical details examples, see data frame output vignette.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"pairwise-comparison-tests","dir":"Reference","previous_headings":"","what":"Pairwise comparison tests","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"between-subjects","dir":"Reference","previous_headings":"","what":"between-subjects","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"Hypothesis testing Effect size estimation supported.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"within-subjects","dir":"Reference","previous_headings":"","what":"within-subjects","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"Hypothesis testing Effect size estimation supported.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":", see: https://indrajeetpatil.github.io/ggstatsplot/articles/web_only/pairwise.html","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/pairwise_comparisons.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiple pairwise comparison for one-way design — pairwise_comparisons","text":"","code":"# for reproducibility set.seed(123) library(statsExpressions)  #------------------- between-subjects design ----------------------------  # parametric # if `var.equal = TRUE`, then Student's t-test will be run pairwise_comparisons(   data            = mtcars,   x               = cyl,   y               = wt,   type            = \"parametric\",   var.equal       = TRUE,   paired          = FALSE,   p.adjust.method = \"none\" ) #> # A tibble: 3 × 6 #>   group1 group2     p.value p.adjust.method test        expression #>   <chr>  <chr>        <dbl> <chr>           <chr>       <list>     #> 1 4      6      0.0106      None            Student's t <language> #> 2 4      8      0.000000207 None            Student's t <language> #> 3 6      8      0.00516     None            Student's t <language>  # if `var.equal = FALSE`, then Games-Howell test will be run pairwise_comparisons(   data            = mtcars,   x               = cyl,   y               = wt,   type            = \"parametric\",   var.equal       = FALSE,   paired          = FALSE,   p.adjust.method = \"bonferroni\" ) #> # A tibble: 3 × 9 #>   group1 group2 statistic   p.value alternative distribution p.adjust.method #>   <chr>  <chr>      <dbl>     <dbl> <chr>       <chr>        <chr>           #> 1 4      6           5.39 0.0125    two.sided   q            Bonferroni      #> 2 4      8           9.11 0.0000124 two.sided   q            Bonferroni      #> 3 6      8           5.12 0.0148    two.sided   q            Bonferroni      #>   test         expression #>   <chr>        <list>     #> 1 Games-Howell <language> #> 2 Games-Howell <language> #> 3 Games-Howell <language>  # non-parametric (Dunn test) pairwise_comparisons(   data            = mtcars,   x               = cyl,   y               = wt,   type            = \"nonparametric\",   paired          = FALSE,   p.adjust.method = \"none\" ) #> # A tibble: 3 × 9 #>   group1 group2 statistic    p.value alternative distribution p.adjust.method #>   <chr>  <chr>      <dbl>      <dbl> <chr>       <chr>        <chr>           #> 1 4      6           1.84 0.0663     two.sided   z            None            #> 2 4      8           4.76 0.00000198 two.sided   z            None            #> 3 6      8           2.22 0.0263     two.sided   z            None            #>   test  expression #>   <chr> <list>     #> 1 Dunn  <language> #> 2 Dunn  <language> #> 3 Dunn  <language>  # robust (Yuen's trimmed means *t*-test) pairwise_comparisons(   data            = mtcars,   x               = cyl,   y               = wt,   type            = \"robust\",   paired          = FALSE,   p.adjust.method = \"fdr\" ) #> # A tibble: 3 × 10 #>   group1 group2 estimate conf.level conf.low conf.high  p.value p.adjust.method #>   <chr>  <chr>     <dbl>      <dbl>    <dbl>     <dbl>    <dbl> <chr>           #> 1 4      6        -0.909       0.95    -1.64    -0.173 0.00872  FDR             #> 2 4      8        -1.62        0.95    -2.50    -0.746 0.000549 FDR             #> 3 6      8        -0.713       0.95    -1.58     0.155 0.0438   FDR             #>   test                 expression #>   <chr>                <list>     #> 1 Yuen's trimmed means <language> #> 2 Yuen's trimmed means <language> #> 3 Yuen's trimmed means <language>  # Bayes Factor (Student's *t*-test) pairwise_comparisons(   data   = mtcars,   x      = cyl,   y      = wt,   type   = \"bayes\",   paired = FALSE ) #> # A tibble: 3 × 18 #>   group1 group2 term       effectsize      estimate conf.level conf.low #>   <chr>  <chr>  <chr>      <chr>              <dbl>      <dbl>    <dbl> #> 1 4      6      Difference Bayesian t-test   -0.686       0.95    -1.22 #> 2 4      8      Difference Bayesian t-test   -1.63        0.95    -2.21 #> 3 6      8      Difference Bayesian t-test   -0.715       0.95    -1.36 #>   conf.high    pd prior.distribution prior.location prior.scale    bf10 #>       <dbl> <dbl> <chr>                       <dbl>       <dbl>   <dbl> #> 1   -0.157  0.992 cauchy                          0       0.707   11.4  #> 2   -1.01   1     cauchy                          0       0.707 5222.   #> 3   -0.0910 0.987 cauchy                          0       0.707    5.36 #>   conf.method log_e_bf10 n.obs expression test        #>   <chr>            <dbl> <int> <list>     <chr>       #> 1 ETI               2.44    18 <language> Student's t #> 2 ETI               8.56    25 <language> Student's t #> 3 ETI               1.68    21 <language> Student's t  #------------------- within-subjects design ----------------------------  # parametric (Student's *t*-test) pairwise_comparisons(   data            = bugs_long,   x               = condition,   y               = desire,   subject.id      = subject,   type            = \"parametric\",   paired          = TRUE,   p.adjust.method = \"BH\" ) #> # A tibble: 6 × 6 #>   group1 group2  p.value p.adjust.method test        expression #>   <chr>  <chr>     <dbl> <chr>           <chr>       <list>     #> 1 HDHF   HDLF   1.06e- 3 FDR             Student's t <language> #> 2 HDHF   LDHF   7.02e- 2 FDR             Student's t <language> #> 3 HDHF   LDLF   3.95e-12 FDR             Student's t <language> #> 4 HDLF   LDHF   6.74e- 2 FDR             Student's t <language> #> 5 HDLF   LDLF   1.99e- 3 FDR             Student's t <language> #> 6 LDHF   LDLF   6.66e- 9 FDR             Student's t <language>  # non-parametric (Durbin-Conover test) pairwise_comparisons(   data            = bugs_long,   x               = condition,   y               = desire,   subject.id      = subject,   type            = \"nonparametric\",   paired          = TRUE,   p.adjust.method = \"BY\" ) #> # A tibble: 6 × 9 #>   group1 group2 statistic  p.value alternative distribution p.adjust.method #>   <chr>  <chr>      <dbl>    <dbl> <chr>       <chr>        <chr>           #> 1 HDHF   HDLF        4.78 1.44e- 5 two.sided   t            BY              #> 2 HDHF   LDHF        2.44 4.47e- 2 two.sided   t            BY              #> 3 HDHF   LDLF        8.01 5.45e-13 two.sided   t            BY              #> 4 HDLF   LDHF        2.34 4.96e- 2 two.sided   t            BY              #> 5 HDLF   LDLF        3.23 5.05e- 3 two.sided   t            BY              #> 6 LDHF   LDLF        5.57 4.64e- 7 two.sided   t            BY              #>   test           expression #>   <chr>          <list>     #> 1 Durbin-Conover <language> #> 2 Durbin-Conover <language> #> 3 Durbin-Conover <language> #> 4 Durbin-Conover <language> #> 5 Durbin-Conover <language> #> 6 Durbin-Conover <language>  # robust (Yuen's trimmed means t-test) pairwise_comparisons(   data            = bugs_long,   x               = condition,   y               = desire,   subject.id      = subject,   type            = \"robust\",   paired          = TRUE,   p.adjust.method = \"hommel\" ) #> # A tibble: 6 × 11 #>   group1 group2 estimate conf.level conf.low conf.high     p.value  p.crit #>   <chr>  <chr>     <dbl>      <dbl>    <dbl>     <dbl>       <dbl>   <dbl> #> 1 HDHF   HDLF      1.03        0.95   0.140      1.92  0.00999     0.0127  #> 2 HDHF   LDHF      0.454       0.95  -0.104      1.01  0.0520      0.025   #> 3 HDHF   LDLF      1.95        0.95   1.09       2.82  0.000000564 0.00851 #> 4 HDLF   LDHF     -0.676       0.95  -1.61       0.256 0.0520      0.05    #> 5 HDLF   LDLF      0.889       0.95   0.0244     1.75  0.0203      0.0169  #> 6 LDHF   LDLF      1.35        0.95   0.560      2.14  0.000102    0.0102  #>   p.adjust.method test                 expression #>   <chr>           <chr>                <list>     #> 1 Hommel          Yuen's trimmed means <language> #> 2 Hommel          Yuen's trimmed means <language> #> 3 Hommel          Yuen's trimmed means <language> #> 4 Hommel          Yuen's trimmed means <language> #> 5 Hommel          Yuen's trimmed means <language> #> 6 Hommel          Yuen's trimmed means <language>  # Bayes Factor (Student's *t*-test) pairwise_comparisons(   data       = bugs_long,   x          = condition,   y          = desire,   subject.id = subject,   type       = \"bayes\",   paired     = TRUE ) #> # A tibble: 6 × 18 #>   group1 group2 term       effectsize      estimate conf.level conf.low #>   <chr>  <chr>  <chr>      <chr>              <dbl>      <dbl>    <dbl> #> 1 HDHF   HDLF   Difference Bayesian t-test    1.10        0.95   0.491  #> 2 HDHF   LDHF   Difference Bayesian t-test    0.455       0.95  -0.0483 #> 3 HDHF   LDLF   Difference Bayesian t-test    2.13        0.95   1.62   #> 4 HDLF   LDHF   Difference Bayesian t-test   -0.661       0.95  -1.32   #> 5 HDLF   LDLF   Difference Bayesian t-test    0.991       0.95   0.369  #> 6 LDHF   LDLF   Difference Bayesian t-test    1.65        0.95   1.14   #>   conf.high    pd prior.distribution prior.location prior.scale     bf10 #>       <dbl> <dbl> <chr>                       <dbl>       <dbl>    <dbl> #> 1    1.76   1.00  cauchy                          0       0.707 4.16e+ 1 #> 2    0.955  0.962 cauchy                          0       0.707 5.83e- 1 #> 3    2.63   1     cauchy                          0       0.707 1.20e+10 #> 4    0.0315 0.97  cauchy                          0       0.707 6.98e- 1 #> 5    1.57   0.999 cauchy                          0       0.707 1.81e+ 1 #> 6    2.15   1     cauchy                          0       0.707 4.81e+ 6 #>   conf.method log_e_bf10 n.obs expression test        #>   <chr>            <dbl> <int> <list>     <chr>       #> 1 ETI              3.73     88 <language> Student's t #> 2 ETI             -0.539    88 <language> Student's t #> 3 ETI             23.2      88 <language> Student's t #> 4 ETI             -0.359    88 <language> Student's t #> 5 ETI              2.90     88 <language> Student's t #> 6 ETI             15.4      88 <language> Student's t"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %<>%, %>% tibble as_tibble, tibble zeallot %<-%","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/statsExpressions-package.html","id":null,"dir":"Reference","previous_headings":"","what":"statsExpressions: Tidy Dataframes and Expressions with Statistical Details — statsExpressions-package","title":"statsExpressions: Tidy Dataframes and Expressions with Statistical Details — statsExpressions-package","text":"{statsExpressions} package two key aims: provide consistent syntax statistical analysis tidy data (pipe-friendly manner), provide statistical expressions (pre-formatted -text statistical results) plotting functions. Statistical packages exhibit substantial diversity terms syntax expected input type. can make difficult switch one statistical approach another. example, functions expect vectors inputs, others expect dataframes. Depending whether repeated measures design , different functions might expect data wide long format. functions can internally omit missing values, functions error presence. Furthermore, someone wishes utilize objects returned packages downstream workflow, straightforward either even functions package can return list, matrix, array, dataframe, etc., depending function. {statsExpressions} comes : can thought unified portal functionality underlying packages can accessed, simpler interface requirement change data format. package forms statistical processing backend ggstatsplot package. documentation, see dedicated website.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/statsExpressions-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"statsExpressions: Tidy Dataframes and Expressions with Statistical Details — statsExpressions-package","text":"statsExpressions","code":""},{"path":[]},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/statsExpressions-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"statsExpressions: Tidy Dataframes and Expressions with Statistical Details — statsExpressions-package","text":"Maintainer: Indrajeet Patil patilindrajeet.science@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_expressions.html","id":null,"dir":"Reference","previous_headings":"","what":"Expressions with statistics for tidy regression data frames — tidy_model_expressions","title":"Expressions with statistics for tidy regression data frames — tidy_model_expressions","text":"Expressions statistics tidy regression data frames","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_expressions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expressions with statistics for tidy regression data frames — tidy_model_expressions","text":"","code":"tidy_model_expressions(   data,   statistic = NULL,   digits = 2L,   effsize.type = \"omega\",   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_expressions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expressions with statistics for tidy regression data frames — tidy_model_expressions","text":"data tidy data frame regression model object (see tidy_model_parameters()). statistic statistic displayed (either \"t\" \"f\"\"z\" \"chi\") expression. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). effsize.type Type effect size needed parametric tests. argument can \"eta\" (partial eta-squared) \"omega\" (partial omega-squared). ... Currently ignored.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_expressions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expressions with statistics for tidy regression data frames — tidy_model_expressions","text":"necessary numeric column values (estimate, statistic, p.value) missing, rows, NULL returned instead expression empty strings.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_expressions.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Expressions with statistics for tidy regression data frames — tidy_model_expressions","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_expressions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expressions with statistics for tidy regression data frames — tidy_model_expressions","text":"","code":"# setup set.seed(123) library(statsExpressions)  # extract a tidy data frame df <- tidy_model_parameters(lm(wt ~ am * cyl, mtcars))  # create a column containing expression; the expression will depend on `statistic` tidy_model_expressions(df, statistic = \"t\") #> # A tibble: 4 × 11 #>   term        estimate std.error conf.level conf.low conf.high statistic #>   <chr>          <dbl>     <dbl>      <dbl>    <dbl>     <dbl>     <dbl> #> 1 (Intercept)   1.66      0.587        0.95    0.455     2.86      2.82  #> 2 am           -0.956     0.793        0.95   -2.58      0.668    -1.21  #> 3 cyl           0.304     0.0826       0.95    0.135     0.473     3.68  #> 4 am:cyl        0.0328    0.130        0.95   -0.234     0.300     0.252 #>   df.error  p.value conf.method expression #>      <int>    <dbl> <chr>       <list>     #> 1       28 0.00864  Wald        <language> #> 2       28 0.238    Wald        <language> #> 3       28 0.000989 Wald        <language> #> 4       28 0.803    Wald        <language> tidy_model_expressions(df, statistic = \"z\") #> # A tibble: 4 × 11 #>   term        estimate std.error conf.level conf.low conf.high statistic #>   <chr>          <dbl>     <dbl>      <dbl>    <dbl>     <dbl>     <dbl> #> 1 (Intercept)   1.66      0.587        0.95    0.455     2.86      2.82  #> 2 am           -0.956     0.793        0.95   -2.58      0.668    -1.21  #> 3 cyl           0.304     0.0826       0.95    0.135     0.473     3.68  #> 4 am:cyl        0.0328    0.130        0.95   -0.234     0.300     0.252 #>   df.error  p.value conf.method expression #>      <int>    <dbl> <chr>       <list>     #> 1       28 0.00864  Wald        <language> #> 2       28 0.238    Wald        <language> #> 3       28 0.000989 Wald        <language> #> 4       28 0.803    Wald        <language> tidy_model_expressions(df, statistic = \"chi\") #> # A tibble: 4 × 11 #>   term        estimate std.error conf.level conf.low conf.high statistic #>   <chr>          <dbl>     <dbl>      <dbl>    <dbl>     <dbl>     <dbl> #> 1 (Intercept)   1.66      0.587        0.95    0.455     2.86      2.82  #> 2 am           -0.956     0.793        0.95   -2.58      0.668    -1.21  #> 3 cyl           0.304     0.0826       0.95    0.135     0.473     3.68  #> 4 am:cyl        0.0328    0.130        0.95   -0.234     0.300     0.252 #>   df.error  p.value conf.method expression #>      <int>    <dbl> <chr>       <list>     #> 1       28 0.00864  Wald        <language> #> 2       28 0.238    Wald        <language> #> 3       28 0.000989 Wald        <language> #> 4       28 0.803    Wald        <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert {parameters} package output to {tidyverse} conventions — tidy_model_parameters","title":"Convert {parameters} package output to {tidyverse} conventions — tidy_model_parameters","text":"Convert {parameters} package output {tidyverse} conventions","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert {parameters} package output to {tidyverse} conventions — tidy_model_parameters","text":"","code":"tidy_model_parameters(model, ...)"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert {parameters} package output to {tidyverse} conventions — tidy_model_parameters","text":"model Statistical Model. ... Arguments passed methods. Non-documented arguments digits, p_digits, ci_digits footer_digits set number digits output. s_value = TRUE, p-value replaced S-value output (cf. Rafi Greenland 2020). pd adds additional column probability direction (see bayestestR::p_direction() details). groups can used group coefficients. passed print-method, can directly used print(), see documentation print.parameters_model(). Furthermore, see 'Examples' model_parameters.default(). developers, whose interest mainly get \"tidy\" data frame model summaries, recommended set pretty_names = FALSE speed computation summary table.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_parameters.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Convert {parameters} package output to {tidyverse} conventions — tidy_model_parameters","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/tidy_model_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert {parameters} package output to {tidyverse} conventions — tidy_model_parameters","text":"","code":"model <- lm(mpg ~ wt + cyl, data = mtcars) tidy_model_parameters(model) #> # A tibble: 3 × 10 #>   term       estimate std.error conf.level conf.low conf.high statistic df.error #>   <chr>         <dbl>     <dbl>      <dbl>    <dbl>     <dbl>     <dbl>    <int> #> 1 (Intercep…    39.7      1.71        0.95    36.2     43.2       23.1        29 #> 2 wt            -3.19     0.757       0.95    -4.74    -1.64      -4.22       29 #> 3 cyl           -1.51     0.415       0.95    -2.36    -0.660     -3.64       29 #> # ℹ 2 more variables: p.value <dbl>, conf.method <chr>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Two-sample tests — two_sample_test","title":"Two-sample tests — two_sample_test","text":"Parametric, non-parametric, robust, Bayesian two-sample tests.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two-sample tests — two_sample_test","text":"","code":"two_sample_test(   data,   x,   y,   subject.id = NULL,   type = \"parametric\",   paired = FALSE,   alternative = \"two.sided\",   digits = 2L,   conf.level = 0.95,   effsize.type = \"g\",   var.equal = FALSE,   bf.prior = 0.707,   tr = 0.2,   nboot = 100L,   ... )"},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two-sample tests — two_sample_test","text":"data data frame (tibble) variables specified taken. data types (e.g., matrix,table, array, etc.) accepted. Additionally, grouped data frames {dplyr} ungrouped entered data. x grouping (independent) variable data. case repeated measures within-subjects design, subject.id argument available explicitly specified, function assumes data already sorted id user creates internal identifier. data sorted, results can inaccurate two levels x NAs present. data expected sorted user subject-1, subject-2, ..., pattern. y response (outcome dependent) variable data. subject.id Relevant case repeated measures within-subjects design (paired = TRUE, .e.), specifies subject repeated measures identifier. Important: Note argument NULL (default), function assumes data already sorted id user creates internal identifier. data sorted leave argument unspecified, results can inaccurate two levels x NAs present. type character specifying type statistical approach: \"parametric\" \"nonparametric\" \"robust\" \"bayes\" can specify just initial letter. paired Logical decides whether experimental design repeated measures/within-subjects -subjects. default FALSE. alternative character string specifying alternative     hypothesis, must one \"two.sided\" (default),     \"greater\" \"less\".  can specify just initial     letter. digits Number digits rounding significant figures. May also \"signif\" return significant figures \"scientific\" return scientific notation. Control number digits adding value suffix, e.g. digits = \"scientific4\" scientific notation 4 decimal places, digits = \"signif5\" 5 significant figures (see also signif()). conf.level Scalar 0 1 (default: 95% confidence/credible intervals, 0.95). NULL, confidence intervals computed. effsize.type Type effect size needed parametric tests. argument can \"d\" (Cohen's d) \"g\" (Hedge's g). var.equal logical variable indicating whether treat     two variances equal. TRUE pooled     variance used estimate variance otherwise Welch     (Satterthwaite) approximation degrees freedom used. bf.prior number 0.5 2 (default 0.707), prior width use calculating Bayes factors posterior estimates. addition numeric arguments, several named values also recognized: \"medium\", \"wide\", \"ultrawide\", corresponding r scale values 1/2, sqrt(2)/2, 1, respectively. case ANOVA, value corresponds scale fixed effects. tr Trim level mean carrying robust tests. case error, try reducing value tr, default set 0.2. Lowering value might help. nboot Number bootstrap samples computing confidence interval effect size (Default: 100L). ... Currently ignored.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two-sample tests — two_sample_test","text":"returned tibble data frame can contain following columns (exact columns depend statistical test): statistic: numeric value statistic df: numeric value parameter modeled (often degrees freedom test) df.error df: relevant statistic question two degrees freedom (e.g. anova) p.value: two-sided p-value associated observed statistic method: name inferential statistical test estimate: estimated value effect size conf.low: lower bound effect size estimate conf.high: upper bound effect size estimate conf.level: width confidence interval conf.method: method used compute confidence interval conf.distribution: statistical distribution effect effectsize: name effect size n.obs: number observations expression: pre-formatted expression containing statistical details examples, see data frame output vignette.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"two-sample-tests","dir":"Reference","previous_headings":"","what":"Two-sample tests","title":"Two-sample tests — two_sample_test","text":"table provides summary : statistical test carried inferential statistics type effect size estimate measure uncertainty estimate functions used internally compute details","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"between-subjects","dir":"Reference","previous_headings":"","what":"between-subjects","title":"Two-sample tests — two_sample_test","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"within-subjects","dir":"Reference","previous_headings":"","what":"within-subjects","title":"Two-sample tests — two_sample_test","text":"Hypothesis testing Effect size estimation","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"citation","dir":"Reference","previous_headings":"","what":"Citation","title":"Two-sample tests — two_sample_test","text":"Patil, ., (2021). statsExpressions: R Package Tidy Dataframes Expressions Statistical Details. Journal Open Source Software, 6(61), 3236, https://doi.org/10.21105/joss.03236","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/reference/two_sample_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Two-sample tests — two_sample_test","text":"","code":"# ----------------------- within-subjects -------------------------------------  # data df <- dplyr::filter(bugs_long, condition %in% c(\"LDLF\", \"LDHF\"))  # for reproducibility set.seed(123)  # ----------------------- parametric ---------------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"parametric\") #> # A tibble: 1 × 16 #>   term   group     statistic df.error       p.value method        alternative #>   <chr>  <chr>         <dbl>    <dbl>         <dbl> <chr>         <chr>       #> 1 desire condition      6.65       90 0.00000000222 Paired t-test two.sided   #>   effectsize estimate conf.level conf.low conf.high conf.method #>   <chr>         <dbl>      <dbl>    <dbl>     <dbl> <chr>       #> 1 Hedges' g     0.691       0.95    0.462     0.917 ncp         #>   conf.distribution n.obs expression #>   <chr>             <int> <list>     #> 1 t                    91 <language>  # ----------------------- non-parametric -----------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"nonparametric\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 statistic      p.value method                    #>   <chr>      <chr>          <dbl>        <dbl> <chr>                     #> 1 desire     condition      2250. 0.0000000241 Wilcoxon signed rank test #>   alternative effectsize        estimate conf.level conf.low conf.high #>   <chr>       <chr>                <dbl>      <dbl>    <dbl>     <dbl> #> 1 two.sided   r (rank biserial)    0.761       0.95    0.642     0.844 #>   conf.method n.obs expression #>   <chr>       <int> <list>     #> 1 normal         91 <language>  # ----------------------- robust --------------------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"robust\") #> # A tibble: 1 × 15 #>   statistic df.error      p.value #>       <dbl>    <dbl>        <dbl> #> 1      6.46       54 0.0000000313 #>   method                                             #>   <chr>                                              #> 1 Yuen's test on trimmed means for dependent samples #>   effectsize                                              estimate conf.level #>   <chr>                                                      <dbl>      <dbl> #> 1 Algina-Keselman-Penfield robust standardized difference    0.533       0.95 #>   conf.low conf.high    mu small medium large n.obs expression #>      <dbl>     <dbl> <dbl> <dbl>  <dbl> <dbl> <int> <list>     #> 1    0.369     0.707     0   0.1    0.3   0.5    91 <language>  # ----------------------- Bayesian ---------------------------------------  two_sample_test(df, condition, desire, subject.id = subject, paired = TRUE, type = \"bayes\") #> # A tibble: 1 × 16 #>   term       effectsize      estimate conf.level conf.low conf.high    pd #>   <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl> #> 1 Difference Bayesian t-test     1.63       0.95     1.13      2.11     1 #>   prior.distribution prior.location prior.scale     bf10 method          #>   <chr>                       <dbl>       <dbl>    <dbl> <chr>           #> 1 cauchy                          0       0.707 4762370. Bayesian t-test #>   conf.method log_e_bf10 n.obs expression #>   <chr>            <dbl> <int> <list>     #> 1 ETI               15.4    91 <language> # ----------------------- between-subjects -------------------------------------  # for reproducibility set.seed(123)  # ----------------------- parametric ---------------------------------------  # unequal variance two_sample_test(ToothGrowth, supp, len, type = \"parametric\") #> # A tibble: 1 × 18 #>   parameter1 parameter2 mean.parameter1 mean.parameter2 statistic df.error #>   <chr>      <chr>                <dbl>           <dbl>     <dbl>    <dbl> #> 1 len        supp                  20.7            17.0      1.92     55.3 #>   p.value method                  alternative effectsize estimate conf.level #>     <dbl> <chr>                   <chr>       <chr>         <dbl>      <dbl> #> 1  0.0606 Welch Two Sample t-test two.sided   Hedges' g     0.488       0.95 #>   conf.low conf.high conf.method conf.distribution n.obs expression #>      <dbl>     <dbl> <chr>       <chr>             <int> <list>     #> 1  -0.0217     0.993 ncp         t                    60 <language>  # equal variance two_sample_test(ToothGrowth, supp, len, type = \"parametric\", var.equal = TRUE) #> # A tibble: 1 × 18 #>   parameter1 parameter2 mean.parameter1 mean.parameter2 statistic df.error #>   <chr>      <chr>                <dbl>           <dbl>     <dbl>    <dbl> #> 1 len        supp                  20.7            17.0      1.92       58 #>   p.value method            alternative effectsize estimate conf.level conf.low #>     <dbl> <chr>             <chr>       <chr>         <dbl>      <dbl>    <dbl> #> 1  0.0604 Two Sample t-test two.sided   Hedges' g     0.488       0.95  -0.0217 #>   conf.high conf.method conf.distribution n.obs expression #>       <dbl> <chr>       <chr>             <int> <list>     #> 1     0.993 ncp         t                    60 <language>  # ----------------------- non-parametric -----------------------------------  two_sample_test(ToothGrowth, supp, len, type = \"nonparametric\") #> # A tibble: 1 × 14 #>   parameter1 parameter2 statistic p.value method                 alternative #>   <chr>      <chr>          <dbl>   <dbl> <chr>                  <chr>       #> 1 len        supp            576.  0.0645 Wilcoxon rank sum test two.sided   #>   effectsize        estimate conf.level conf.low conf.high conf.method n.obs #>   <chr>                <dbl>      <dbl>    <dbl>     <dbl> <chr>       <int> #> 1 r (rank biserial)    0.279       0.95 -0.00812     0.523 normal         60 #>   expression #>   <list>     #> 1 <language>  # ----------------------- robust --------------------------------------------  two_sample_test(ToothGrowth, supp, len, type = \"robust\") #> # A tibble: 1 × 11 #>   statistic df.error p.value #>       <dbl>    <dbl>   <dbl> #> 1      2.29     33.5  0.0286 #>   method                                               #>   <chr>                                                #> 1 Yuen's test on trimmed means for independent samples #>   effectsize                                              estimate conf.level #>   <chr>                                                      <dbl>      <dbl> #> 1 Algina-Keselman-Penfield robust standardized difference    0.683       0.95 #>   conf.low conf.high n.obs expression #>      <dbl>     <dbl> <int> <list>     #> 1 -0.00736      2.36    60 <language>  # ----------------------- Bayesian ---------------------------------------  two_sample_test(ToothGrowth, supp, len, type = \"bayes\") #> # A tibble: 1 × 16 #>   term       effectsize      estimate conf.level conf.low conf.high    pd #>   <chr>      <chr>              <dbl>      <dbl>    <dbl>     <dbl> <dbl> #> 1 Difference Bayesian t-test     3.16       0.95   -0.338      6.78 0.961 #>   prior.distribution prior.location prior.scale  bf10 method          #>   <chr>                       <dbl>       <dbl> <dbl> <chr>           #> 1 cauchy                          0       0.707  1.20 Bayesian t-test #>   conf.method log_e_bf10 n.obs expression #>   <chr>            <dbl> <int> <list>     #> 1 ETI              0.181    60 <language>"},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-161","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.6.1","title":"statsExpressions 1.6.1","text":"Upgrade easystats package versions avoid user-facing warnings due API changes upstream.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-160","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.6.0","title":"statsExpressions 1.6.0","text":"CRAN release: 2024-09-08","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-1-6-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 1.6.0","text":"Test effect size details vignette now available package website (https://indrajeetpatil.github.io/statsExpressions/articles/). Unused dataset removed: movies_wide.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-155","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.5.5","title":"statsExpressions 1.5.5","text":"CRAN release: 2024-07-05","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-1-5-5","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 1.5.5","text":"package licence updated MIT license.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-5-5","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.5.5","text":"Updates code fix warnings coming via updates easystats packages.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-154","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.5.4","title":"statsExpressions 1.5.4","text":"CRAN release: 2024-03-20","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-1-5-4","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 1.5.4","text":"cryptic useful parameter k renamed digits improve discoverability. consistent, contingency_table() gains alternative parameter, defaults two-sided alternative hypothesis.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-153","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.5.3","title":"statsExpressions 1.5.3","text":"CRAN release: 2024-01-13 Internal changes .","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-152","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.5.2","title":"statsExpressions 1.5.2","text":"CRAN release: 2023-09-12 Fixes failures R-devel due changes formula interface paired test.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-151","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.5.1","title":"statsExpressions 1.5.1","text":"CRAN release: 2023-05-23","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-1-5-1","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 1.5.1","text":"Following dependencies move weak strong dependencies given importance key functions: afex {PMCMRplus}.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-150","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.5.0","title":"statsExpressions 1.5.0","text":"CRAN release: 2023-02-19","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-1-5-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 1.5.0","text":"minimum needed R version now bumped R 4.1 critical dependency (pbkrtest) requires R version.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-140","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.4.0","title":"statsExpressions 1.4.0","text":"CRAN release: 2023-01-14","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"new-features-1-4-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"statsExpressions 1.4.0","text":"returned data frames statsExpressions get new statsExpressions class print method class.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-4-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.4.0","text":"tidy_model_parameters() longer removes columns contain missing values. Wilcox tests longer provide exact p-values.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-136","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.3.6","title":"statsExpressions 1.3.6","text":"CRAN release: 2022-12-16 Maintenance release.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-135","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.3.5","title":"statsExpressions 1.3.5","text":"CRAN release: 2022-11-07 centrality_description() gets new conf.level parameter. Updates tests examples insure removal suggested packages.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-134","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.3.4","title":"statsExpressions 1.3.4","text":"CRAN release: 2022-10-10 Fixes breakages due effectsize package update.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-133","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.3.3","title":"statsExpressions 1.3.3","text":"CRAN release: 2022-08-11","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-3-3","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.3.3","text":"necessary numeric column values missing, rows tidy_model_expressions() now returns NULL instead expression empty strings.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-132","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.3.2","title":"statsExpressions 1.3.2","text":"CRAN release: 2022-05-20","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"new-features-1-3-2","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"statsExpressions 1.3.2","text":"pairwise_comparisons() function carry pairwise comparison tests one-way designs.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-1-3-2","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 1.3.2","text":"Expressions statistical details sometimes column named label, times expression column. Now consistently expression column. Additionally, glue expressions stored parsed data frame outputs, unparsed others. Now consistently parsed. top.text parameter removed functions. relevant context ggstatsplot package. package longer uses , longer necessary retain .","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-131","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.3.1","title":"statsExpressions 1.3.1","text":"CRAN release: 2022-03-29 Fixes breakages due insight package update.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-130","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.3.0","title":"statsExpressions 1.3.0","text":"CRAN release: 2022-01-14","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 1.3.0","text":"format_num() removed favor insight::format_value().","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.3.0","text":"expr_template() renamed informative add_expression_col() function different API. returns dataframe additional expression column instead just expression.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-120","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.2.0","title":"statsExpressions 1.2.0","text":"CRAN release: 2021-10-19","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 1.2.0","text":"number effect size estimates confidence intervals changed due respective changes made effectsize package version 0.5 release. full details changes, see: https://easystats.github.io/effectsize/news/index.html reason, effect size one-way contingency table changed Cramer’s V Pearson’s C.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"new-features-1-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"statsExpressions 1.2.0","text":"centrality_description() function added describe distribution level grouping variable create expression describing centrality measure. Adds new experimental function tidy_model_expressions() create expressions dataframes containing tidied results regression model objects.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 1.2.0","text":"Removes redundant bf_extractor function. tidy_model_parameters thing. Exports utility functions (long_to_wide_converter, format_num, stats_type_switch) get rid reliance ipmisc package. consistent expressions, dataframe Bayesian analysis now also contain log Bayes Factor values. tidy_model_effectsize() function longer exported helpful internal workings package. Given values can really high, statistic values non-parametric tests shown log scale, highly non-standard practice caused lot confusion among users. light feedback, functions longer return values log scale scientific notation keep statistical expressions short.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.2.0","text":"Removes VR_dilemma dataset, lacked enough variation good dataset use examples tests.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-110","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.1.0","title":"statsExpressions 1.1.0","text":"CRAN release: 2021-05-30","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 1.1.0","text":"new JOSS paper statsExpressions package!! https://joss.theoj.org/papers/10.21105/joss.03236 effect size independent trimmed means two-sample test changed explanatory measure effect size AKP’s delta, easier understand interpret since robust cousin Cohen’s d. one_sample_test two_sample_test gain alternative argument specify alternative hypothesis (#86). Cohen’s d Hedge’s g use non-pooled standard deviation (cf. https://psyarxiv.com/tu6mp/).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-1-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.1.0","text":"output dataframes now contain columns additional information confidence intervals computed (thanks effectsize package).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-101","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.0.1","title":"statsExpressions 1.0.1","text":"CRAN release: 2021-04-13","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-1-0-1","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 1.0.1","text":"Retires vestigial expr_* functions.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-0-1","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.0.1","text":"Adapts failing tests due changes effectsize.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-100","dir":"Changelog","previous_headings":"","what":"statsExpressions 1.0.0","title":"statsExpressions 1.0.0","text":"CRAN release: 2021-03-11 first stable release statsExpressions! good news bad news accompanies milestone. bad news: API package changed completely: functions return dataframe, expression, default. expression contained list column dataframe . , salvage functions breaking, add $expression[[1]] function calls. example, using function expr_t_onesample(), now specify expr_t_onesample()$expression[[1]], forth. , general, advice use expr_* functions, vestigial names new avatars function removed future. new names intuitive, e.g., expr_t_onesample() now called one_sample_test(), etc. good news: new changes current functions, except change necessary maintenance bug squashing. Well, precise, true functions “stable” badge. BUG FIXES entered dataframe grouped-tibble, function internally ungroups (#79).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 1.0.0","text":"reduce dependency load, afex moved Imports Suggests.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-071","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.7.1","title":"statsExpressions 0.7.1","text":"CRAN release: 2021-02-19","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-0-7-1","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 0.7.1","text":"avoid confusion among users, trimming level functions now changed tr = 0.1 tr = 0.2 (WRS2 defaults ).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-0-7-1","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 0.7.1","text":"expr_template gains new argument bayesian, can return expression Bayesian analysis, slightly different template. Additionally, changed conventions column names expects. Retires additional caption-making functionality unique expr_meta_random type = \"parametric\". context feature supported therefore inconsistent rest package API. Removes tidy_model_performance function, longer used internally. Removes column containing log values Bayes Factor relevant expressions. meta-analysis packages move Imports Suggests reduce installation time user. robust tests package based trimmed means, except correlation test. changed: robust correlation measure now Winsorized correlation, based trimming. Therefore, beta argument replaced tr argument. result minor changes correlation coefficient estimates.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-070","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.7.0","title":"statsExpressions 0.7.0","text":"CRAN release: 2021-01-19","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 0.7.0","text":"consistent ggstatsplot’s overall syntax philosophy type argument can used specify type statistical approach used functions. t_parametric, t_nonparametric, t_robust, t_bayes now removed favor single function two_sample_test. expr_anova_parametric, expr_anova_nonparametric, expr_anova_robust, expr_anova_bayes now removed favor single function oneway_anova. statsExpressions longer internally relies tidyBF. Bayesian analysis carried package . done make maintenance package easier helps major internal code refactoring. , re-exported functions tidyBF also removed. BUG FIXES contingency_table ignored ratio argument computing Cramer’s V one-sample test. fixed.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 0.7.0","text":"non-parametric functions now use effectsize package compute effect sizes rcompanion. lead changes effect sizes confidence intervals reported respective functions. Robust one-sample test changed one-sample percentile bootstrap bootstrap-t method one-sample test, uses trimmed mean like rest robust functions package.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-7-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.7.0","text":"Package internally relies afex instead ez within-subjects ANOVA. expr_template gains paired argument.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-062","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.6.2","title":"statsExpressions 0.6.2","text":"CRAN release: 2020-12-08","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-6-2","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.6.2","text":"Internal refactoring catch changes made effectsize. Tests adapted changes well. Sample size information expressions pretty-formatted.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-061","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.6.1","title":"statsExpressions 0.6.1","text":"CRAN release: 2020-12-01","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-0-6-1","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 0.6.1","text":"Adds two new helper functions: tidy_model_parameters tidy_model_performance toggle easystats tidymodels naming conventions. Drops broomExtra dependencies favor parameters + performance. Removes unused vestigial Titanic_full dataset.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-060","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.6.0","title":"statsExpressions 0.6.0","text":"CRAN release: 2020-10-30","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 0.6.0","text":"Removes alias expr_onesample_proptest. expr_template function retires effsize.df argument. Now details need entered data. meta-analyses now carried using expr_meta_random individual functions removed.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 0.6.0","text":"effect sizes contingency tabs now calculated via effectsize instead rcompanion. lead slight differences effect sizes CIs computations faster. Additionally, lower bound never negative restricted [0,1]. contingency_table function made less robust. now fails instead returning NULL supposed work. done consistent functions package also fail instead returning NULL. expr_anova_parametric always applies sphericity correction p-values repeated measures ANOVA. expr_anova_parametric retires non-partial variants effect sizes (eta-squared omega-squared, .e.) parametric analyses. t-test ANOVA tests get subject.id argument relevant repeated measures design.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-6-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.6.0","text":"Retires vestigial stat.title argument. originally intended give info tests, now expressions contain details. paired ANOVA designs, partial = TRUE recognized effect sizes. Retires bias.correct argument contingency table analysis. rarely justifiable use biased version Cramer’s V.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-051","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.5.1","title":"statsExpressions 0.5.1","text":"CRAN release: 2020-10-05","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-5-1","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.5.1","text":"Adapts tests changes made correlation package. Subtitles correlation tests make clear type statistic. Small p-values (< 0.001) now shown scientific format.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-050","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.5.0","title":"statsExpressions 0.5.0","text":"CRAN release: 2020-09-12","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-5-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.5.0","text":"Adapts changes made tidyBF package. Re-exports correlation::correlation needed ggstatsplot. t_nonparametric subtitle now clarifies whether ’s Wilcoxon test Mann-Whitney test.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-042","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.4.2","title":"statsExpressions 0.4.2","text":"CRAN release: 2020-06-20","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-4-2","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.4.2","text":"Thanks Sarah, package hexsticker. :) Confidence intervals Spearman’s rho computed using correlation instead rcompanion. relevant functions get rid messages argument functions longer print message bootstrapped CIs used. effect size measure paired robust t-test now changed robust (trimmed-Winsorized) standardized difference similar Cohen’s d.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-041","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.4.1","title":"statsExpressions 0.4.1","text":"CRAN release: 2020-04-22 BUG FIXES Major bug introduced 0.4.0 release expr_anova_parametric: changing conf.level doesn’t work function defaults 0.90 CIs (#32).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-4-1","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.4.1","text":"Removes extra space contained subtitles Bayes Factor results (#31).","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-040","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.4.0","title":"statsExpressions 0.4.0","text":"CRAN release: 2020-04-15","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 0.4.0","text":"Removes experimental corr_objects function. Bayes Factor related functions now moved new tidyBF package re-exported .","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 0.4.0","text":"Minimum R version bumped R 3.6.0. Retires internal effsize_t_parametric helper function favor relying functions effectsize, now added dependency. Similarly, statsExpressions now relies effectsize compute effect sizes ANOVA designs, instead sjstats. parametric t-tests ANOVAs, confidence intervals effect sizes estimated using noncentrality parameter method. Centrality-based methods deprecated. Correlation analysis carried using correlation package, now added dependency.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-4-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.4.0","text":"expressions now contain name statistical test carried .","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-031","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.3.1","title":"statsExpressions 0.3.1","text":"CRAN release: 2020-02-14","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"new-features-0-3-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"statsExpressions 0.3.1","text":"Adds new function corr_objects reduce dependency load ggstatsplot. experimental function avoided stabilizes.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-030","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.3.0","title":"statsExpressions 0.3.0","text":"CRAN release: 2020-01-29","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"statsExpressions 0.3.0","text":"New function carry meta-analysis: expr_meta_bayes.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-021","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.2.1","title":"statsExpressions 0.2.1","text":"CRAN release: 2020-01-23","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"new-features-0-2-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"statsExpressions 0.2.1","text":"New function carry meta-analysis: expr_meta_parametric, expr_meta_robust, bf_meta.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-020","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.2.0","title":"statsExpressions 0.2.0","text":"CRAN release: 2020-01-10","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"breaking-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"statsExpressions 0.2.0","text":"expr_template function now expects two dataframes: data effsize.df contain details needed creating expressions instead providing individual values. makes function friendly work using modeling packages like broom.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.2.0","text":"Minor tweaks widehat displayed expressions. Cramer’s V bias-corrected default.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-013","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.1.3","title":"statsExpressions 0.1.3","text":"CRAN release: 2019-12-18","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"major-changes-0-1-3","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"statsExpressions 0.1.3","text":"Removes MCMCpack Depends. effect size texts now contain ^ top signify estimates.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-012","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.1.2","title":"statsExpressions 0.1.2","text":"CRAN release: 2019-12-13","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-1-2","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.1.2","text":"Maintenance release fix additional check issues CRAN.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-011","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.1.1","title":"statsExpressions 0.1.1","text":"CRAN release: 2019-08-28","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"minor-changes-0-1-1","dir":"Changelog","previous_headings":"","what":"MINOR CHANGES","title":"statsExpressions 0.1.1","text":"Fixing tests new release rcompanion dependency. Minor code refactoring.","code":""},{"path":"https://indrajeetpatil.github.io/statsExpressions/news/index.html","id":"statsexpressions-010","dir":"Changelog","previous_headings":"","what":"statsExpressions 0.1.0","title":"statsExpressions 0.1.0","text":"CRAN release: 2019-08-24 First release package.","code":""}]
