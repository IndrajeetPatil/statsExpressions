on: [push, pull_request]

name: Continuous integration

jobs:
  macOS:
    runs-on: macOS-latest
    strategy:
      matrix:
        # for time being don't check on devel
        #r: ['3.x', 'devel']
        r: ['3.6']
    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.r }}
      - name: Install dependencies
        env:
          R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        run: Rscript -e "install.packages(c('remotes', 'rcmdcheck'))" -e "remotes::install_deps(dependencies = TRUE)"
      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'error')"

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        r: ['3.6']
    container: rstudio/r-base:${{ matrix.r }}-xenial
    env:
      CRAN: 'https://demo.rstudiopm.com/all/__linux__/xenial/latest'
    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
      - name: Install system dependencies
        run: |
          sudo apt-get update && \
          sudo apt-get install -y libssl-dev libxml2-dev
      - name: Install dependencies
        run: Rscript -e "install.packages(c('remotes', 'rcmdcheck'))" -e "remotes::install_deps(dependencies = TRUE)"
      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'error')"

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - uses: r-lib/actions/setup-r@master
      - name: Install dependencies
        run: Rscript -e "install.packages(c('remotes', 'rcmdcheck'))" -e "remotes::install_deps(dependencies = TRUE)"
      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'error')"
