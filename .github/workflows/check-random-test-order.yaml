# Run tests in random order
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: check-random-test-order

jobs:
  check-random-test-order:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: "devel"
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          pak-version: devel
          extra-packages: |
            local::.

      - name: Run Tests in Random Order
        run: |
          options(crayon.enabled = TRUE)
          withr::local_envvar(TESTTHAT_PARALLEL = "FALSE")
          library(cli)
          library(glue)
          library(testthat)
          pkgload::load_all(".")
          test_script_paths <- testthat::find_test_scripts("tests/testthat")
          set.seed(123)
          randomized_test_script_paths <- sample(test_script_paths)
          test_path <- function(path) {
            cli_inform(paste0("Running tests in: `", path, "`\n"))
            report <- as.data.frame(testthat::test_file(path, reporter = "silent"))
            has_test_failures <- any(report$failed == 1L)
            has_test_errors <- any(report$error == 1L)
            if (has_test_failures) cli_abort(glue("Tests in `{path}` are failing."))
            if (has_test_errors) cli_abort(glue("There was error while running tests in `{path}`."))
            if (!has_test_failures && !has_test_errors) cli_alert_success(glue("All tests passing in `{path}`."))
          }
          purrr::walk(randomized_test_script_paths, test_path)
        shell: Rscript {0}
