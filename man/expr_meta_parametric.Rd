% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_meta_analysis_expressions.R
\name{expr_meta_parametric}
\alias{expr_meta_parametric}
\title{Making expression with frequentist random-effects meta-analysis
results}
\usage{
expr_meta_parametric(
  data,
  conf.level = 0.95,
  k = 2,
  messages = FALSE,
  output = "subtitle",
  caption = NULL,
  ...
)
}
\arguments{
\item{data}{A dataframe. It \strong{must} contain columns named \code{estimate} (effect
sizes or outcomes)  and \code{std.error} (corresponding standard errors). These
two columns will be used for \code{yi}  and \code{sei} arguments in \code{metafor::rma}.}

\item{conf.level}{Scalar between 0 and 1. If unspecified, the defaults return
\verb{95\%} lower and upper confidence intervals (\code{0.95}).}

\item{k}{Number of digits after decimal point (should be an integer)
(Default: \code{k = 2}).}

\item{messages}{Decides whether messages references, notes, and warnings are
to be displayed (Default: \code{TRUE}).}

\item{output}{Character describing the desired output. If \code{"subtitle"}, a
formatted subtitle with summary effect and statistical details will be
returned, and if \code{"caption"}, expression containing details from model
summary will be returned. The other option is to return \code{"tidy"} data frame
with coefficients or \code{"glance"} dataframe with model summaries.}

\item{caption}{Text to display as caption. This argument is relevant only
when \code{output = "caption"}.}

\item{...}{Additional arguments passed to \code{metafor::rma}.}
}
\description{
This analysis is carried out using the \code{metafor} package. For
more, see \code{?metafor::rma}.
}
\examples{
\donttest{
# setup
set.seed(123)
library(statsExpressions)

# let's create a dataframe
df_results <-
  structure(
    .Data = list(estimate = c(
      0.382047603321706, 0.780783111514665,
      0.425607573765058, 0.558365541235078, 0.956473848429961
    ), std.error = c(
      0.0465576338644502,
      0.0330218199731529, 0.0362834986178494, 0.0480571500648261, 0.062215818388157
    ), t.value = c(
      8.20590677855356, 23.6444603038067, 11.7300588415607,
      11.6187818146078, 15.3734833553524
    ), conf.low = c(
      0.290515146096969,
      0.715841986960399, 0.354354575031406, 0.46379116008131, 0.827446138277154
    ), conf.high = c(
      0.473580060546444, 0.845724236068931, 0.496860572498711,
      0.652939922388847, 1.08550155858277
    ), p.value = c(
      3.28679518728519e-15,
      4.04778497135963e-75, 7.59757330804449e-29, 5.45155840151592e-26,
      2.99171217913312e-13
    ), df.residual = c(
      394L, 358L, 622L, 298L,
      22L
    )),
    row.names = c(NA, -5L),
    class = c("tbl_df", "tbl", "data.frame")
  )

# making subtitle
expr_meta_parametric(
  data = df_results,
  k = 3,
  messages = FALSE
)

# getting tidy data frame with coefficients
expr_meta_parametric(
  data = df_results,
  messages = FALSE,
  output = "tidy"
)

# making caption
expr_meta_parametric(
  data = df_results,
  k = 2,
  messages = FALSE,
  output = "caption"
)

# getting dataframe with model summary
expr_meta_parametric(
  data = df_results,
  messages = FALSE,
  output = "glance"
)
}
}
