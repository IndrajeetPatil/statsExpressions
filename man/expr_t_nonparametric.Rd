% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers_t_test_expressions.R
\name{expr_t_nonparametric}
\alias{expr_t_nonparametric}
\title{Making expression for Mann-Whitney \emph{U}-test/Wilcoxon test results}
\usage{
expr_t_nonparametric(
  data,
  x,
  y,
  paired = FALSE,
  k = 2,
  conf.level = 0.95,
  conf.type = "norm",
  nboot = 100,
  stat.title = NULL,
  messages = TRUE,
  ...
)
}
\arguments{
\item{data}{A dataframe (or a tibble) from which variables specified are to
be taken. A matrix or tables will \strong{not} be accepted.}

\item{x}{The grouping variable from the dataframe \code{data}.}

\item{y}{The response (a.k.a. outcome or dependent) variable from the
dataframe \code{data}.}

\item{paired}{Logical that decides whether the experimental design is
repeated measures/within-subjects or between-subjects. The default is
\code{FALSE}.}

\item{k}{Number of digits after decimal point (should be an integer)
(Default: \code{k = 2}).}

\item{conf.level}{Scalar between 0 and 1. If unspecified, the defaults return
\verb{95\%} lower and upper confidence intervals (\code{0.95}).}

\item{conf.type}{A vector of character strings representing the type of
intervals required. The value should be any subset of the values \code{"norm"},
\code{"basic"}, \code{"perc"}, \code{"bca"}. For more, see \code{?boot::boot.ci}.}

\item{nboot}{Number of bootstrap samples for computing confidence interval
for the effect size (Default: \code{100}).}

\item{stat.title}{A character describing the test being run, which will be
added as a prefix in the subtitle. The default is \code{NULL}. An example of a
\code{stat.title} argument will be something like \code{"Student's t-test: "}.}

\item{messages}{Decides whether messages references, notes, and warnings are
to be displayed (Default: \code{TRUE}).}

\item{...}{Additional arguments (currently ignored).}
}
\description{
Making expression for Mann-Whitney \emph{U}-test/Wilcoxon test results
}
\details{
For the two independent samples case, the Mann-Whitney \emph{U}-test is
calculated and \emph{W} is reported from \emph{stats::wilcox.test}. For the paired
samples case the Wilcoxon signed rank test is run and \emph{V} is reported.

Since there is no single commonly accepted method for reporting effect size
for these tests we are computing and reporting \emph{r} (computed as
\eqn{Z/\sqrt{N}}) along with the confidence intervals associated with the
estimate. Note that \emph{N} here corresponds to total \emph{sample size} for
independent/between-subjects designs, and to total number of \emph{pairs} (and
\strong{not} \emph{observations}) for repeated measures/within-subjects designs.

\emph{Note:} The \emph{stats::wilcox.test} function does not follow the
same convention as \emph{stats::t.test}. The sign of the \emph{V} test statistic
will always be positive since it is \strong{the sum of the positive signed ranks}.
Therefore \emph{V} will vary in magnitude but not significance based solely
on the order of the grouping variable. Consider manually
reordering your factor levels if appropriate as shown in the second example
below.
}
\examples{

\donttest{
# for reproducibility
set.seed(123)

# -------------- between-subjects design ------------------------
# simple function call
statsExpressions::expr_t_nonparametric(
  data = sleep,
  x = group,
  y = extra
)

# creating a smaller dataset
msleep_short <- dplyr::filter(
  .data = ggplot2::msleep,
  vore \%in\% c("carni", "herbi")
)

# modifying few things
statsExpressions::expr_t_nonparametric(
  data = msleep_short,
  x = vore,
  y = sleep_rem,
  nboot = 200,
  conf.level = 0.99,
  conf.type = "bca"
)

# The order of the grouping factor matters when computing *V*
# Changing default alphabetical order manually
msleep_short$vore <- factor(msleep_short$vore,
  levels = c("herbi", "carni")
)

# note the change in the reported *V* value but the identical
# value for *p* and the reversed effect size
statsExpressions::expr_t_nonparametric(
  data = msleep_short,
  x = vore,
  y = sleep_rem
)

# -------------- within-subjects design ------------------------
# using dataset included in the package
statsExpressions::expr_t_nonparametric(
  data = VR_dilemma,
  x = modality,
  y = score,
  paired = TRUE,
  conf.level = 0.90,
  conf.type = "perc",
  nboot = 200,
  k = 5
)
}
}
\references{
For more details, see-
\url{https://indrajeetpatil.github.io/statsExpressions/articles/stats_details.html}
}
\author{
\href{https://github.com/IndrajeetPatil}{Indrajeet Patil}
}
